{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { ListItemLink } from \"@react-md/list\";\nimport { useKeyboardFocusableElement } from \"@react-md/utils\";\n/**\n * This is a wrapper for the {@link ListItemLink} component that allows for the\n * correct keyboard focus behavior within {@link Menu}s. Just like the\n * {@link ListItemLink}, set a {@link ListItemLinkProps.component} prop to your\n * custom `Link` if needed.\n *\n * @remarks \\@since 2.0.0\n */\nexport var MenuItemLink = forwardRef(function MenuItemLink(_a, nodeRef) {\n  var className = _a.className,\n    children = _a.children,\n    _b = _a.role,\n    role = _b === void 0 ? \"menuitem\" : _b,\n    _c = _a.tabIndex,\n    tabIndex = _c === void 0 ? -1 : _c,\n    liProps = _a.liProps,\n    props = __rest(_a, [\"className\", \"children\", \"role\", \"tabIndex\", \"liProps\"]);\n  var ref = useKeyboardFocusableElement(nodeRef);\n  return _jsx(\"li\", __assign({}, liProps, {\n    role: \"none\"\n  }, {\n    children: _jsx(ListItemLink, __assign({}, props, {\n      ref: ref,\n      role: role,\n      tabIndex: tabIndex,\n      className: cn(\"rmd-menu-item\", className)\n    }, {\n      children: children\n    }))\n  }));\n});","map":{"version":3,"names":["forwardRef","cn","ListItemLink","useKeyboardFocusableElement","MenuItemLink","_a","nodeRef","className","children","_b","role","_c","tabIndex","liProps","props","__rest","ref","_jsx","__assign"],"sources":["E:\\WebDevelop\\React\\Project 07\\movies-app\\node_modules\\@react-md\\menu\\src\\MenuItemLink.tsx"],"sourcesContent":["import type { HTMLAttributes } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport type {\n  ListItemLinkProps,\n  ListItemLinkWithComponentProps,\n} from \"@react-md/list\";\nimport { ListItemLink } from \"@react-md/list\";\nimport { useKeyboardFocusableElement } from \"@react-md/utils\";\n\n/** @remarks \\@since 2.0.0 */\nexport interface MenuItemLinkProps extends ListItemLinkProps {\n  /**\n   * The current role for the menu item. This will eventually be updated for\n   * some of the other `menuitem*` widgets.\n   */\n  role?: \"menuitem\";\n\n  /**\n   * The tab index for the menu item. This should always stay at `-1`.\n   */\n  tabIndex?: number;\n\n  /**\n   * Any additional props that should be provided to the `<li>` that wraps the\n   * link component. You probably won't ever need to use this.\n   *\n   * @remarks \\@since 5.0.0\n   */\n  liProps?: Readonly<HTMLAttributes<HTMLLIElement>>;\n}\n\n/** @remarks \\@since 2.0.0 */\nexport type MenuItemLinkWithComponentProps = MenuItemLinkProps &\n  ListItemLinkWithComponentProps;\n\n/**\n * This is a wrapper for the {@link ListItemLink} component that allows for the\n * correct keyboard focus behavior within {@link Menu}s. Just like the\n * {@link ListItemLink}, set a {@link ListItemLinkProps.component} prop to your\n * custom `Link` if needed.\n *\n * @remarks \\@since 2.0.0\n */\nexport const MenuItemLink = forwardRef<\n  HTMLAnchorElement,\n  MenuItemLinkProps | MenuItemLinkWithComponentProps\n>(function MenuItemLink(\n  { className, children, role = \"menuitem\", tabIndex = -1, liProps, ...props },\n  nodeRef\n) {\n  const ref = useKeyboardFocusableElement(nodeRef);\n  return (\n    <li {...liProps} role=\"none\">\n      <ListItemLink\n        {...props}\n        ref={ref}\n        role={role}\n        tabIndex={tabIndex}\n        className={cn(\"rmd-menu-item\", className)}\n      >\n        {children}\n      </ListItemLink>\n    </li>\n  );\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAK3B,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,2BAA2B,QAAQ,iBAAiB;AA4B7D;;;;;;;;AAQA,OAAO,IAAMC,YAAY,GAAGJ,UAAU,CAGpC,SAASI,YAAYA,CACrBC,EAA4E,EAC5EC,OAAO;EADL,IAAAC,SAAS,GAAAF,EAAA,CAAAE,SAAA;IAAEC,QAAQ,GAAAH,EAAA,CAAAG,QAAA;IAAEC,EAAA,GAAAJ,EAAA,CAAAK,IAAiB;IAAjBA,IAAI,GAAAD,EAAA,cAAG,UAAU,GAAAA,EAAA;IAAEE,EAAA,GAAAN,EAAA,CAAAO,QAAa;IAAbA,QAAQ,GAAAD,EAAA,cAAG,CAAC,CAAC,GAAAA,EAAA;IAAEE,OAAO,GAAAR,EAAA,CAAAQ,OAAA;IAAKC,KAAK,GAAAC,MAAA,CAAAV,EAAA,EAA1E,wDAA4E,CAAF;EAG1E,IAAMW,GAAG,GAAGb,2BAA2B,CAACG,OAAO,CAAC;EAChD,OACEW,IAAA,OAAAC,QAAA,KAAQL,OAAO;IAAEH,IAAI,EAAC;EAAM;IAAAF,QAAA,EAC1BS,IAAA,CAACf,YAAY,EAAAgB,QAAA,KACPJ,KAAK;MACTE,GAAG,EAAEA,GAAG;MACRN,IAAI,EAAEA,IAAI;MACVE,QAAQ,EAAEA,QAAQ;MAClBL,SAAS,EAAEN,EAAE,CAAC,eAAe,EAAEM,SAAS;IAAC;MAAAC,QAAA,EAExCA;IAAQ;EACI,GACZ;AAET,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}