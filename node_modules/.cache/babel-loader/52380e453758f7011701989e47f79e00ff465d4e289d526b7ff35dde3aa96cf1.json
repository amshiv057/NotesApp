{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { useIcon } from \"@react-md/icon\";\nimport { bem } from \"@react-md/utils\";\nimport { useFormTheme } from \"../FormThemeProvider\";\nimport { FloatingLabel } from \"../label/FloatingLabel\";\nimport { TextFieldContainer } from \"../text-field/TextFieldContainer\";\nimport { useFieldStates } from \"../useFieldStates\";\nvar block = bem(\"rmd-native-select\");\nvar container = bem(\"rmd-native-select-container\");\n/**\n * This component is used to render a native `<select>` element with the text\n * field theme styles. This component is great to use for native behavior and\n * full accessibility.\n */\nexport var NativeSelect = forwardRef(function NativeSelect(_a, ref) {\n  var style = _a.style,\n    className = _a.className,\n    labelStyle = _a.labelStyle,\n    labelClassName = _a.labelClassName,\n    selectStyle = _a.selectStyle,\n    selectClassName = _a.selectClassName,\n    propIcon = _a.icon,\n    propTheme = _a.theme,\n    _b = _a.dense,\n    dense = _b === void 0 ? false : _b,\n    _c = _a.inline,\n    inline = _c === void 0 ? false : _c,\n    _d = _a.stretch,\n    stretch = _d === void 0 ? false : _d,\n    _e = _a.error,\n    error = _e === void 0 ? false : _e,\n    _f = _a.disabled,\n    disabled = _f === void 0 ? false : _f,\n    label = _a.label,\n    propOnBlur = _a.onBlur,\n    propOnFocus = _a.onFocus,\n    propOnChange = _a.onChange,\n    containerRef = _a.containerRef,\n    isLeftAddon = _a.isLeftAddon,\n    isRightAddon = _a.isRightAddon,\n    leftChildren = _a.leftChildren,\n    rightChildren = _a.rightChildren,\n    propUnderlineDirection = _a.underlineDirection,\n    children = _a.children,\n    props = __rest(_a, [\"style\", \"className\", \"labelStyle\", \"labelClassName\", \"selectStyle\", \"selectClassName\", \"icon\", \"theme\", \"dense\", \"inline\", \"stretch\", \"error\", \"disabled\", \"label\", \"onBlur\", \"onFocus\", \"onChange\", \"containerRef\", \"isLeftAddon\", \"isRightAddon\", \"leftChildren\", \"rightChildren\", \"underlineDirection\", \"children\"]);\n  var id = props.id,\n    value = props.value,\n    defaultValue = props.defaultValue,\n    multiple = props.multiple;\n  var _g = useFormTheme({\n      theme: propTheme,\n      underlineDirection: propUnderlineDirection\n    }),\n    theme = _g.theme,\n    underlineDirection = _g.underlineDirection;\n  var underline = theme === \"underline\" || theme === \"filled\";\n  var icon = useIcon(\"dropdown\", propIcon);\n  var _h = useFieldStates({\n      onBlur: propOnBlur,\n      onFocus: propOnFocus,\n      onChange: propOnChange,\n      value: value,\n      defaultValue: defaultValue\n    }),\n    valued = _h.valued,\n    focused = _h.focused,\n    onBlur = _h.onBlur,\n    onFocus = _h.onFocus,\n    onChange = _h.onChange;\n  return _jsxs(TextFieldContainer, __assign({\n    style: style,\n    className: cn(container({\n      multi: multiple,\n      padded: multiple && label\n    }), className),\n    ref: containerRef,\n    theme: theme,\n    error: error,\n    active: focused,\n    label: !!label,\n    dense: dense,\n    inline: inline,\n    stretch: stretch,\n    disabled: disabled,\n    isLeftAddon: isLeftAddon,\n    isRightAddon: isRightAddon,\n    leftChildren: leftChildren,\n    rightChildren: multiple && rightChildren,\n    underlineDirection: underlineDirection\n  }, {\n    children: [_jsx(FloatingLabel, __assign({\n      style: labelStyle,\n      className: cn(block(\"label\"), labelClassName),\n      htmlFor: id,\n      error: error,\n      active: valued && focused,\n      valued: valued,\n      floating: valued || multiple,\n      dense: dense,\n      disabled: disabled\n    }, {\n      children: label\n    })), _jsx(\"select\", __assign({}, props, {\n      ref: ref,\n      style: selectStyle,\n      className: cn(block({\n        icon: icon,\n        multi: multiple,\n        \"label-underline\": label && underline,\n        \"placeholder-underline\": !label && underline,\n        floating: label && theme !== \"none\"\n      }), selectClassName),\n      disabled: disabled,\n      onFocus: onFocus,\n      onBlur: onBlur,\n      onChange: onChange\n    }, {\n      children: children\n    })), !multiple && icon && _jsx(\"span\", __assign({\n      className: block(\"icon\")\n    }, {\n      children: icon\n    }))]\n  }));\n});","map":{"version":3,"names":["forwardRef","cn","useIcon","bem","useFormTheme","FloatingLabel","TextFieldContainer","useFieldStates","block","container","NativeSelect","_a","ref","style","className","labelStyle","labelClassName","selectStyle","selectClassName","propIcon","icon","propTheme","theme","_b","dense","_c","inline","_d","stretch","_e","error","_f","disabled","label","propOnBlur","onBlur","propOnFocus","onFocus","propOnChange","onChange","containerRef","isLeftAddon","isRightAddon","leftChildren","rightChildren","propUnderlineDirection","underlineDirection","children","props","__rest","id","value","defaultValue","multiple","_g","underline","_h","valued","focused","_jsxs","__assign","multi","padded","active","_jsx","htmlFor","floating"],"sources":["E:\\WebDevelop\\React\\Project 07\\movies-app\\node_modules\\@react-md\\form\\src\\select\\NativeSelect.tsx"],"sourcesContent":["import type {\n  CSSProperties,\n  ReactNode,\n  Ref,\n  SelectHTMLAttributes,\n} from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { useIcon } from \"@react-md/icon\";\nimport { bem } from \"@react-md/utils\";\n\nimport { useFormTheme } from \"../FormThemeProvider\";\nimport { FloatingLabel } from \"../label/FloatingLabel\";\nimport type { TextFieldContainerOptions } from \"../text-field/TextFieldContainer\";\nimport { TextFieldContainer } from \"../text-field/TextFieldContainer\";\nimport { useFieldStates } from \"../useFieldStates\";\n\nexport interface NativeSelectProps\n  extends SelectHTMLAttributes<HTMLSelectElement>,\n    TextFieldContainerOptions {\n  /**\n   * The id for the select. This is required for accessibility.\n   */\n  id: string;\n\n  /**\n   * An optional ref to apply to the text field's container div element. The\n   * default ref is forwarded on to the `input` element.\n   */\n  containerRef?: Ref<HTMLDivElement>;\n\n  /**\n   * An optional icon to display to the right of the select. This should\n   * normally be a dropdown icon to replace the native select's dropdown icon.\n   * If this is set to `null`, the native select's dropdown icon will be\n   * displayed instead.\n   *\n   * This defaults to the `IconProvider`'s dropdown icon from the\n   * `@react-md/icon` package.\n   */\n  icon?: ReactNode;\n\n  /**\n   * An optional floating label to use for the text field. This should really\n   * only be used when the `theme` prop is not set to `\"none\"`. This will be\n   * wrapped in the `<Label>` component itself and automatically apply the\n   * `htmlFor` prop for this text field.\n   */\n  label?: ReactNode;\n\n  /**\n   * An optional style to apply to the label wrapper.\n   */\n  labelStyle?: CSSProperties;\n\n  /**\n   * An optional className to apply to the label wrapper.\n   */\n  labelClassName?: string;\n\n  /**\n   * An optional style to apply to the select itself. The `style` prop will be\n   * applied to the container `<div>` instead.\n   */\n  selectStyle?: CSSProperties;\n\n  /**\n   * An optional className to apply to the select itself. The `className` prop\n   * will be applied to the container `<div>` instead.\n   */\n  selectClassName?: string;\n\n  /**\n   * The value to use for the text field. This will make the component\n   * controlled and require the `onChange` prop to be provided as well otherwise\n   * this will act as a read only text field.\n   *\n   * If the `multiple` prop is enabled, this **must** be a list of strings.\n   */\n  value?: string | readonly string[];\n\n  /**\n   * The default value for the text field which will make it uncontrolled. If\n   * you manually change the `defaultValue` prop, the input's value **will not\n   * change** unless you provide a different `key` as well. Use the `value` prop\n   * instead for a controlled input.\n   *\n   * If the `multiple` prop is enabled, this **must** be a list of strings.\n   */\n  defaultValue?: string | readonly string[];\n}\n\nconst block = bem(\"rmd-native-select\");\nconst container = bem(\"rmd-native-select-container\");\n\n/**\n * This component is used to render a native `<select>` element with the text\n * field theme styles. This component is great to use for native behavior and\n * full accessibility.\n */\nexport const NativeSelect = forwardRef<HTMLSelectElement, NativeSelectProps>(\n  function NativeSelect(\n    {\n      style,\n      className,\n      labelStyle,\n      labelClassName,\n      selectStyle,\n      selectClassName,\n      icon: propIcon,\n      theme: propTheme,\n      dense = false,\n      inline = false,\n      stretch = false,\n      error = false,\n      disabled = false,\n      label,\n      onBlur: propOnBlur,\n      onFocus: propOnFocus,\n      onChange: propOnChange,\n      containerRef,\n      isLeftAddon,\n      isRightAddon,\n      leftChildren,\n      rightChildren,\n      underlineDirection: propUnderlineDirection,\n      children,\n      ...props\n    },\n    ref\n  ) {\n    const { id, value, defaultValue, multiple } = props;\n    const { theme, underlineDirection } = useFormTheme({\n      theme: propTheme,\n      underlineDirection: propUnderlineDirection,\n    });\n    const underline = theme === \"underline\" || theme === \"filled\";\n\n    const icon = useIcon(\"dropdown\", propIcon);\n    const { valued, focused, onBlur, onFocus, onChange } = useFieldStates({\n      onBlur: propOnBlur,\n      onFocus: propOnFocus,\n      onChange: propOnChange,\n      value,\n      defaultValue,\n    });\n\n    return (\n      <TextFieldContainer\n        style={style}\n        className={cn(\n          container({\n            multi: multiple,\n            padded: multiple && label,\n          }),\n          className\n        )}\n        ref={containerRef}\n        theme={theme}\n        error={error}\n        active={focused}\n        label={!!label}\n        dense={dense}\n        inline={inline}\n        stretch={stretch}\n        disabled={disabled}\n        isLeftAddon={isLeftAddon}\n        isRightAddon={isRightAddon}\n        leftChildren={leftChildren}\n        rightChildren={multiple && rightChildren}\n        underlineDirection={underlineDirection}\n      >\n        <FloatingLabel\n          style={labelStyle}\n          className={cn(block(\"label\"), labelClassName)}\n          htmlFor={id}\n          error={error}\n          active={valued && focused}\n          valued={valued}\n          floating={valued || multiple}\n          dense={dense}\n          disabled={disabled}\n        >\n          {label}\n        </FloatingLabel>\n        <select\n          {...props}\n          ref={ref}\n          style={selectStyle}\n          className={cn(\n            block({\n              icon,\n              multi: multiple,\n              \"label-underline\": label && underline,\n              \"placeholder-underline\": !label && underline,\n              floating: label && theme !== \"none\",\n            }),\n            selectClassName\n          )}\n          disabled={disabled}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          onChange={onChange}\n        >\n          {children}\n        </select>\n        {!multiple && icon && <span className={block(\"icon\")}>{icon}</span>}\n      </TextFieldContainer>\n    );\n  }\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}