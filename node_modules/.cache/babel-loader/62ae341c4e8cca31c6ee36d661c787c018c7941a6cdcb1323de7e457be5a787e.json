{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { TextIconSpacing } from \"@react-md/icon\";\nimport { bem } from \"@react-md/utils\";\nimport { labelStyles } from \"../label\";\nvar styles = bem(\"rmd-slider-container\");\n/**\n * The `SliderContainer` component is mostly an internal component that is\n * built-in to the `Slider` and `RangeSlider` components to add addons to the\n * left or right of the `SliderTrack`. When vertical, it will add addons to the\n * bottom or top instead.\n *\n * @remarks \\@since 2.5.0\n */\nexport var SliderContainer = forwardRef(function SliderContainer(_a, ref) {\n  var className = _a.className,\n    beforeAddon = _a.beforeAddon,\n    afterAddon = _a.afterAddon,\n    children = _a.children,\n    _b = _a.vertical,\n    vertical = _b === void 0 ? false : _b,\n    label = _a.label,\n    labelId = _a.labelId,\n    labelProps = _a.labelProps,\n    _c = _a.disabled,\n    disabled = _c === void 0 ? false : _c,\n    props = __rest(_a, [\"className\", \"beforeAddon\", \"afterAddon\", \"children\", \"vertical\", \"label\", \"labelId\", \"labelProps\", \"disabled\"]);\n  return _jsxs(_Fragment, {\n    children: [label && _jsx(\"span\", __assign({}, labelProps, {\n      id: labelId,\n      className: cn(labelStyles({\n        disabled: disabled\n      }), labelProps === null || labelProps === void 0 ? void 0 : labelProps.className)\n    }, {\n      children: label\n    })), _jsx(\"div\", __assign({}, props, {\n      ref: ref,\n      className: cn(styles({\n        h: !vertical,\n        \"pad-left\": !vertical && !beforeAddon,\n        \"pad-right\": !vertical && !afterAddon,\n        \"pad-bottom\": vertical && !beforeAddon,\n        \"pad-top\": vertical && !afterAddon,\n        v: vertical\n      }), className)\n    }, {\n      children: _jsx(TextIconSpacing, __assign({\n        icon: beforeAddon,\n        stacked: vertical,\n        flexReverse: vertical\n      }, {\n        children: _jsx(TextIconSpacing, __assign({\n          icon: afterAddon,\n          iconAfter: true,\n          stacked: vertical,\n          flexReverse: vertical\n        }, {\n          children: children\n        }))\n      }))\n    }))]\n  });\n});","map":{"version":3,"names":["forwardRef","cn","TextIconSpacing","bem","labelStyles","styles","SliderContainer","_a","ref","className","beforeAddon","afterAddon","children","_b","vertical","label","labelId","labelProps","_c","disabled","props","__rest","_jsxs","_Fragment","_jsx","__assign","id","h","v","icon","stacked","flexReverse","iconAfter"],"sources":["E:\\WebDevelop\\React\\Project 07\\movies-app\\node_modules\\@react-md\\form\\src\\slider\\SliderContainer.tsx"],"sourcesContent":["import type { HTMLAttributes } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { TextIconSpacing } from \"@react-md/icon\";\nimport { bem } from \"@react-md/utils\";\n\nimport type {\n  SliderAddons,\n  SliderLabelProps,\n  SliderPresentation,\n} from \"./types\";\nimport { labelStyles } from \"../label\";\n\nconst styles = bem(\"rmd-slider-container\");\n\n/**\n * @remarks \\@since 2.5.0\n */\nexport interface SliderContainerProps\n  extends HTMLAttributes<HTMLDivElement>,\n    SliderLabelProps,\n    SliderAddons,\n    Pick<SliderPresentation, \"vertical\"> {\n  /**\n   * This is _really_ only required when the `label` prop is also provided, but\n   * since this component is only really used internally for the `Slider` and\n   * `RangeSlider`, it is required since they always pass one in.\n   */\n  labelId: string;\n\n  /**\n   * Boolean if the `Slider` or `RangeSlider` are disabled so that the `label`\n   * can also be `disabled`.\n   */\n  disabled?: boolean;\n}\n\n/**\n * The `SliderContainer` component is mostly an internal component that is\n * built-in to the `Slider` and `RangeSlider` components to add addons to the\n * left or right of the `SliderTrack`. When vertical, it will add addons to the\n * bottom or top instead.\n *\n * @remarks \\@since 2.5.0\n */\nexport const SliderContainer = forwardRef<HTMLDivElement, SliderContainerProps>(\n  function SliderContainer(\n    {\n      className,\n      beforeAddon,\n      afterAddon,\n      children,\n      vertical = false,\n      label,\n      labelId,\n      labelProps,\n      disabled = false,\n      ...props\n    },\n    ref\n  ) {\n    return (\n      <>\n        {label && (\n          <span\n            {...labelProps}\n            id={labelId}\n            className={cn(labelStyles({ disabled }), labelProps?.className)}\n          >\n            {label}\n          </span>\n        )}\n        <div\n          {...props}\n          ref={ref}\n          className={cn(\n            styles({\n              h: !vertical,\n              \"pad-left\": !vertical && !beforeAddon,\n              \"pad-right\": !vertical && !afterAddon,\n              \"pad-bottom\": vertical && !beforeAddon,\n              \"pad-top\": vertical && !afterAddon,\n              v: vertical,\n            }),\n            className\n          )}\n        >\n          <TextIconSpacing\n            icon={beforeAddon}\n            stacked={vertical}\n            flexReverse={vertical}\n          >\n            <TextIconSpacing\n              icon={afterAddon}\n              iconAfter\n              stacked={vertical}\n              flexReverse={vertical}\n            >\n              {children}\n            </TextIconSpacing>\n          </TextIconSpacing>\n        </div>\n      </>\n    );\n  }\n);\n"],"mappings":";;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,eAAe,QAAQ,gBAAgB;AAChD,SAASC,GAAG,QAAQ,iBAAiB;AAOrC,SAASC,WAAW,QAAQ,UAAU;AAEtC,IAAMC,MAAM,GAAGF,GAAG,CAAC,sBAAsB,CAAC;AAwB1C;;;;;;;;AAQA,OAAO,IAAMG,eAAe,GAAGN,UAAU,CACvC,SAASM,eAAeA,CACtBC,EAWC,EACDC,GAAG;EAXD,IAAAC,SAAS,GAAAF,EAAA,CAAAE,SAAA;IACTC,WAAW,GAAAH,EAAA,CAAAG,WAAA;IACXC,UAAU,GAAAJ,EAAA,CAAAI,UAAA;IACVC,QAAQ,GAAAL,EAAA,CAAAK,QAAA;IACRC,EAAA,GAAAN,EAAA,CAAAO,QAAgB;IAAhBA,QAAQ,GAAAD,EAAA,cAAG,KAAK,GAAAA,EAAA;IAChBE,KAAK,GAAAR,EAAA,CAAAQ,KAAA;IACLC,OAAO,GAAAT,EAAA,CAAAS,OAAA;IACPC,UAAU,GAAAV,EAAA,CAAAU,UAAA;IACVC,EAAA,GAAAX,EAAA,CAAAY,QAAgB;IAAhBA,QAAQ,GAAAD,EAAA,cAAG,KAAK,GAAAA,EAAA;IACbE,KAAK,GAAAC,MAAA,CAAAd,EAAA,EAVV,gHAWC,CADS;EAIV,OACEe,KAAA,CAAAC,SAAA;IAAAX,QAAA,GACGG,KAAK,IACJS,IAAA,SAAAC,QAAA,KACMR,UAAU;MACdS,EAAE,EAAEV,OAAO;MACXP,SAAS,EAAER,EAAE,CAACG,WAAW,CAAC;QAAEe,QAAQ,EAAAA;MAAA,CAAE,CAAC,EAAEF,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAER,SAAS;IAAC;MAAAG,QAAA,EAE9DG;IAAK,GAET,EACDS,IAAA,QAAAC,QAAA,KACML,KAAK;MACTZ,GAAG,EAAEA,GAAG;MACRC,SAAS,EAAER,EAAE,CACXI,MAAM,CAAC;QACLsB,CAAC,EAAE,CAACb,QAAQ;QACZ,UAAU,EAAE,CAACA,QAAQ,IAAI,CAACJ,WAAW;QACrC,WAAW,EAAE,CAACI,QAAQ,IAAI,CAACH,UAAU;QACrC,YAAY,EAAEG,QAAQ,IAAI,CAACJ,WAAW;QACtC,SAAS,EAAEI,QAAQ,IAAI,CAACH,UAAU;QAClCiB,CAAC,EAAEd;OACJ,CAAC,EACFL,SAAS;IACV;MAAAG,QAAA,EAEDY,IAAA,CAACtB,eAAe,EAAAuB,QAAA;QACdI,IAAI,EAAEnB,WAAW;QACjBoB,OAAO,EAAEhB,QAAQ;QACjBiB,WAAW,EAAEjB;MAAQ;QAAAF,QAAA,EAErBY,IAAA,CAACtB,eAAe,EAAAuB,QAAA;UACdI,IAAI,EAAElB,UAAU;UAChBqB,SAAS;UACTF,OAAO,EAAEhB,QAAQ;UACjBiB,WAAW,EAAEjB;QAAQ;UAAAF,QAAA,EAEpBA;QAAQ;MACO;IACF,GACd;EAAA,EACL;AAEP,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}