{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { buttonThemeClassNames } from \"@react-md/button\";\nimport { TextIconSpacing, useIcon } from \"@react-md/icon\";\nimport { useInteractionStates } from \"@react-md/states\";\nimport { SrOnly } from \"@react-md/typography\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-file-input\");\n/**\n * This component is a wrapper for the `<input type=\"file\" />` that can be themed\n * like a button.\n */\nexport var FileInput = forwardRef(function FileInput(_a, ref) {\n  var style = _a.style,\n    propClassName = _a.className,\n    propIcon = _a.icon,\n    _b = _a.iconAfter,\n    iconAfter = _b === void 0 ? false : _b,\n    propChildren = _a.children,\n    _c = _a.theme,\n    theme = _c === void 0 ? \"primary\" : _c,\n    _d = _a.themeType,\n    themeType = _d === void 0 ? \"contained\" : _d,\n    _e = _a.buttonType,\n    buttonType = _e === void 0 ? propChildren ? \"text\" : \"icon\" : _e,\n    _f = _a.multiple,\n    multiple = _f === void 0 ? false : _f,\n    propDisableIconSpacing = _a.disableIconSpacing,\n    _g = _a.disableRepeatableFiles,\n    disableRepeatableFiles = _g === void 0 ? false : _g,\n    onKeyDown = _a.onKeyDown,\n    onKeyUp = _a.onKeyUp,\n    onMouseDown = _a.onMouseDown,\n    onMouseUp = _a.onMouseUp,\n    onMouseLeave = _a.onMouseLeave,\n    onClick = _a.onClick,\n    onTouchStart = _a.onTouchStart,\n    onTouchMove = _a.onTouchMove,\n    onTouchEnd = _a.onTouchEnd,\n    onChange = _a.onChange,\n    props = __rest(_a, [\"style\", \"className\", \"icon\", \"iconAfter\", \"children\", \"theme\", \"themeType\", \"buttonType\", \"multiple\", \"disableIconSpacing\", \"disableRepeatableFiles\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseUp\", \"onMouseLeave\", \"onClick\", \"onTouchStart\", \"onTouchMove\", \"onTouchEnd\", \"onChange\"]);\n  var id = props.id,\n    disabled = props.disabled;\n  var icon = useIcon(\"upload\", propIcon);\n  var disableIconSpacing = propDisableIconSpacing !== null && propDisableIconSpacing !== void 0 ? propDisableIconSpacing : typeof propChildren === \"undefined\";\n  var children = propChildren;\n  if (typeof propChildren === \"undefined\") {\n    children = _jsx(SrOnly, {\n      children: \"Upload\"\n    });\n  }\n  var _h = useInteractionStates({\n      handlers: {\n        onKeyDown: onKeyDown,\n        onKeyUp: onKeyUp,\n        onMouseDown: onMouseDown,\n        onMouseUp: onMouseUp,\n        onMouseLeave: onMouseLeave,\n        onClick: onClick,\n        onTouchStart: onTouchStart,\n        onTouchMove: onTouchMove,\n        onTouchEnd: onTouchEnd\n      },\n      className: buttonThemeClassNames({\n        theme: theme,\n        themeType: themeType,\n        buttonType: buttonType,\n        disabled: disabled,\n        className: propClassName\n      }),\n      // pressing enter or space would trigger two click events otherwise.\n      disableEnterClick: true\n    }),\n    ripples = _h.ripples,\n    className = _h.className,\n    handlers = _h.handlers;\n  var content = icon;\n  if (disableIconSpacing || children && !icon) {\n    content = _jsxs(_Fragment, {\n      children: [!iconAfter && icon, children, iconAfter && icon]\n    });\n  } else if (children) {\n    content = _jsx(TextIconSpacing, __assign({\n      icon: icon,\n      iconAfter: iconAfter\n    }, {\n      children: children\n    }));\n  }\n  return _jsxs(_Fragment, {\n    children: [_jsx(\"input\", __assign({}, props, handlers, {\n      ref: ref,\n      onChange: onChange,\n      value: disableRepeatableFiles ? undefined : \"\",\n      type: \"file\",\n      className: block(),\n      multiple: multiple\n    })), _jsxs(\"label\", __assign({\n      htmlFor: id,\n      style: style,\n      className: cn(\"rmd-file-input-label\", className)\n    }, {\n      children: [content, ripples]\n    }))]\n  });\n});","map":{"version":3,"names":["forwardRef","cn","buttonThemeClassNames","TextIconSpacing","useIcon","useInteractionStates","SrOnly","bem","block","FileInput","_a","ref","style","propClassName","className","propIcon","icon","_b","iconAfter","propChildren","children","_c","theme","_d","themeType","_e","buttonType","_f","multiple","propDisableIconSpacing","disableIconSpacing","_g","disableRepeatableFiles","onKeyDown","onKeyUp","onMouseDown","onMouseUp","onMouseLeave","onClick","onTouchStart","onTouchMove","onTouchEnd","onChange","props","__rest","id","disabled","_jsx","_h","handlers","disableEnterClick","ripples","content","_jsxs","_Fragment","__assign","value","undefined","type","htmlFor"],"sources":["E:\\WebDevelop\\React\\Project 07\\movies-app\\node_modules\\@react-md\\form\\src\\file-input\\FileInput.tsx"],"sourcesContent":["import type { InputHTMLAttributes, ReactNode } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport type { ButtonThemeProps } from \"@react-md/button\";\nimport { buttonThemeClassNames } from \"@react-md/button\";\nimport { TextIconSpacing, useIcon } from \"@react-md/icon\";\nimport { useInteractionStates } from \"@react-md/states\";\nimport { SrOnly } from \"@react-md/typography\";\nimport { bem } from \"@react-md/utils\";\n\ntype InputAttributes = Omit<\n  InputHTMLAttributes<HTMLInputElement>,\n  \"type\" | \"defaultValue\" | \"value\"\n>;\n\nexport interface FileInputProps extends ButtonThemeProps, InputAttributes {\n  /**\n   * An id for the input. This is required for a11y since it also is applied as\n   * the `htmlFor` prop for the label.\n   */\n  id: string;\n\n  /**\n   * The change event handler to attach to this input. This is required since\n   * there's really no use in this component otherwise.\n   */\n  onChange: React.ChangeEventHandler<HTMLInputElement>;\n\n  /**\n   * An optional icon to display for the file input.\n   */\n  icon?: ReactNode;\n\n  /**\n   * Boolean if the icon should appear after the children in the label.\n   */\n  iconAfter?: boolean;\n\n  /**\n   * Boolean if the children should not have some spacing between the icon and\n   * itself.  The default behavior is to use the `<TextIconSpacing>` component\n   * for text styled input buttons, but this can be disabled if you want to use\n   * a screen-reader only accessible label.\n   *\n   * Note: This will default to `false` if {@link children} are provided.\n   *\n   * @defaultValue `true`\n   */\n  disableIconSpacing?: boolean;\n\n  /**\n   * Boolean if the file input should no longer allow the same file to be\n   * selected multiple times and trigger the `onChange` each time it is\n   * selected.\n   */\n  disableRepeatableFiles?: boolean;\n\n  /**\n   * Children should generally be provided when the {@link buttonType} is\n   * set to `\"text\"`. This defaults to a screen-reader only accessible text.\n   *\n   * @defaultValue `<SrOnly>Upload</SrOnly>`\n   */\n  children?: ReactNode;\n}\n\nconst block = bem(\"rmd-file-input\");\n\n/**\n * This component is a wrapper for the `<input type=\"file\" />` that can be themed\n * like a button.\n */\nexport const FileInput = forwardRef<HTMLInputElement, FileInputProps>(\n  function FileInput(\n    {\n      style,\n      className: propClassName,\n      icon: propIcon,\n      iconAfter = false,\n      children: propChildren,\n      theme = \"primary\",\n      themeType = \"contained\",\n      buttonType = propChildren ? \"text\" : \"icon\",\n      multiple = false,\n      disableIconSpacing: propDisableIconSpacing,\n      disableRepeatableFiles = false,\n      onKeyDown,\n      onKeyUp,\n      onMouseDown,\n      onMouseUp,\n      onMouseLeave,\n      onClick,\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd,\n      onChange,\n      ...props\n    },\n    ref\n  ) {\n    const { id, disabled } = props;\n    const icon = useIcon(\"upload\", propIcon);\n    const disableIconSpacing =\n      propDisableIconSpacing ?? typeof propChildren === \"undefined\";\n\n    let children = propChildren;\n    if (typeof propChildren === \"undefined\") {\n      children = <SrOnly>Upload</SrOnly>;\n    }\n\n    const { ripples, className, handlers } = useInteractionStates({\n      handlers: {\n        onKeyDown,\n        onKeyUp,\n        onMouseDown,\n        onMouseUp,\n        onMouseLeave,\n        onClick,\n        onTouchStart,\n        onTouchMove,\n        onTouchEnd,\n      },\n      className: buttonThemeClassNames({\n        theme,\n        themeType,\n        buttonType,\n        disabled,\n        className: propClassName,\n      }),\n      // pressing enter or space would trigger two click events otherwise.\n      disableEnterClick: true,\n    });\n\n    let content: ReactNode = icon;\n    if (disableIconSpacing || (children && !icon)) {\n      content = (\n        <>\n          {!iconAfter && icon}\n          {children}\n          {iconAfter && icon}\n        </>\n      );\n    } else if (children) {\n      content = (\n        <TextIconSpacing icon={icon} iconAfter={iconAfter}>\n          {children}\n        </TextIconSpacing>\n      );\n    }\n\n    return (\n      <>\n        <input\n          {...props}\n          {...handlers}\n          ref={ref}\n          onChange={onChange}\n          value={disableRepeatableFiles ? undefined : \"\"}\n          type=\"file\"\n          className={block()}\n          multiple={multiple}\n        />\n        <label\n          htmlFor={id}\n          style={style}\n          className={cn(\"rmd-file-input-label\", className)}\n        >\n          {content}\n          {ripples}\n        </label>\n      </>\n    );\n  }\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}