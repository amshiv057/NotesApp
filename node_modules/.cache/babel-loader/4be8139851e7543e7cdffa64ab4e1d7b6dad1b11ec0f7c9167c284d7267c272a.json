{"ast":null,"code":"import { useActiveDescendantContext } from \"./activeDescendantContext\";\nimport { useKeyboardFocusableElement } from \"./useKeyboardFocusableElement\";\n/**\n * @remarks \\@since 5.0.0\n */\nexport function useActiveDescendant(_a) {\n  var id = _a.id,\n    ref = _a.ref;\n  var activeId = useActiveDescendantContext().activeId;\n  var refCallback = useKeyboardFocusableElement(ref);\n  return {\n    ref: refCallback,\n    active: id === activeId\n  };\n}","map":{"version":3,"names":["useActiveDescendantContext","useKeyboardFocusableElement","useActiveDescendant","_a","id","ref","activeId","refCallback","active"],"sources":["E:\\WebDevelop\\React\\Project 07\\movies-app\\node_modules\\@react-md\\utils\\src\\keyboardMovement\\useActiveDescendant.ts"],"sourcesContent":["import type { Ref, RefCallback } from \"react\";\nimport { useActiveDescendantContext } from \"./activeDescendantContext\";\nimport { useKeyboardFocusableElement } from \"./useKeyboardFocusableElement\";\n\n/**\n * @remarks \\@since 5.0.0\n */\nexport interface ActiveDescendantHookOptions<E extends HTMLElement> {\n  /**\n   * The DOM id for the element. This is required so that the\n   * {@link ActiveDescendantContext.activeId} can be updated to the current\n   * element as needed.\n   */\n  id: string;\n\n  /**\n   * An optional ref to merge with the ref returned by this hook.\n   */\n  ref?: Ref<E>;\n}\n\n/**\n * @remarks \\@since 5.0.0\n */\nexport interface ActiveDescendantHookReturnValue<E extends HTMLElement> {\n  /**\n   * A ref handler that **must** be provided to the DOM element for the active\n   * descendant movement to work correctly.\n   */\n  ref: RefCallback<E>;\n\n  /**\n   * Boolean if this element is the current focus. This is useful for adding a\n   * focus class name since this element actually does not gain focus while\n   * active.\n   */\n  active: boolean;\n}\n\n/**\n * @remarks \\@since 5.0.0\n */\nexport function useActiveDescendant<E extends HTMLElement>({\n  id,\n  ref,\n}: ActiveDescendantHookOptions<E>): ActiveDescendantHookReturnValue<E> {\n  const { activeId } = useActiveDescendantContext();\n  const refCallback = useKeyboardFocusableElement(ref);\n  return {\n    ref: refCallback,\n    active: id === activeId,\n  };\n}\n"],"mappings":"AACA,SAASA,0BAA0B,QAAQ,2BAA2B;AACtE,SAASC,2BAA2B,QAAQ,+BAA+B;AAqC3E;;;AAGA,OAAM,SAAUC,mBAAmBA,CAAwBC,EAG1B;MAF/BC,EAAE,GAAAD,EAAA,CAAAC,EAAA;IACFC,GAAG,GAAAF,EAAA,CAAAE,GAAA;EAEK,IAAAC,QAAQ,GAAKN,0BAA0B,EAAE,CAAAM,QAAjC;EAChB,IAAMC,WAAW,GAAGN,2BAA2B,CAACI,GAAG,CAAC;EACpD,OAAO;IACLA,GAAG,EAAEE,WAAW;IAChBC,MAAM,EAAEJ,EAAE,KAAKE;GAChB;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}