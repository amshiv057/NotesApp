{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useMemo, useRef } from \"react\";\nimport { useDir } from \"../Dir\";\nimport { DEFAULT_KEYBOARD_MOVEMENT, DEFAULT_LTR_KEYBOARD_MOVEMENT, DEFAULT_RTL_KEYBOARD_MOVEMENT, KeyboardMovementContextProvider } from \"./movementContext\";\nimport { getSearchText } from \"./utils\";\n/**\n * @example\n * Main Usage\n * ```tsx\n * function Example() {\n *   return (\n *     <KeyboardMovementProvider>\n *       <CustomKeyboardFocusWidget />\n *     </KeyboardMovementProvider>\n *   );\n * }\n *\n * function CustomKeyboardFocusWidget() {\n *   const { focusIndex: _focusIndex, ...eventHandlers } = useKeyboardFocus();\n *   return (\n *     <div {...eventHandlers}>\n *       <FocusableChild />\n *       <FocusableChild />\n *       <FocusableChild />\n *       <FocusableChild />\n *     </div>\n *   );\n * }\n *\n * function FocusableChild() {\n *   const refCallback = useKeyboardFocusableElement()\n *\n *   return <div role=\"menuitem\" tabIndex={-1} ref={refCallback}>Content</div>;\n * }\n * ```\n *\n * @remarks \\@since 5.0.0\n */\nexport function KeyboardMovementProvider(_a) {\n  var children = _a.children,\n    _b = _a.loopable,\n    loopable = _b === void 0 ? false : _b,\n    _c = _a.searchable,\n    searchable = _c === void 0 ? false : _c,\n    _d = _a.horizontal,\n    horizontal = _d === void 0 ? false : _d,\n    _e = _a.includeDisabled,\n    includeDisabled = _e === void 0 ? false : _e,\n    propIncrementKeys = _a.incrementKeys,\n    propDecrementKeys = _a.decrementKeys,\n    propJumpToFirstKeys = _a.jumpToFirstKeys,\n    propJumpToLastKeys = _a.jumpToLastKeys;\n  var isRTL = useDir().dir === \"rtl\";\n  var defaults;\n  if (horizontal) {\n    defaults = isRTL ? DEFAULT_RTL_KEYBOARD_MOVEMENT : DEFAULT_LTR_KEYBOARD_MOVEMENT;\n  } else {\n    defaults = DEFAULT_KEYBOARD_MOVEMENT;\n  }\n  var incrementKeys = propIncrementKeys || defaults.incrementKeys;\n  var decrementKeys = propDecrementKeys || defaults.decrementKeys;\n  var jumpToFirstKeys = propJumpToFirstKeys || defaults.jumpToFirstKeys;\n  var jumpToLastKeys = propJumpToLastKeys || defaults.jumpToLastKeys;\n  var watching = useRef([]);\n  var configuration = {\n    incrementKeys: incrementKeys,\n    decrementKeys: decrementKeys,\n    jumpToFirstKeys: jumpToFirstKeys,\n    jumpToLastKeys: jumpToLastKeys\n  };\n  var config = useRef(configuration);\n  config.current = configuration;\n  var value = useMemo(function () {\n    return {\n      attach: function (element) {\n        watching.current.push({\n          element: element,\n          content: getSearchText(element, searchable)\n        });\n      },\n      detach: function (element) {\n        watching.current = watching.current.filter(function (cache) {\n          return cache.element !== element;\n        });\n      },\n      watching: watching,\n      config: config,\n      loopable: loopable,\n      searchable: searchable,\n      horizontal: horizontal,\n      includeDisabled: includeDisabled\n    };\n  }, [horizontal, includeDisabled, loopable, searchable]);\n  return _jsx(KeyboardMovementContextProvider, __assign({\n    value: value\n  }, {\n    children: children\n  }));\n}","map":{"version":3,"names":["useMemo","useRef","useDir","DEFAULT_KEYBOARD_MOVEMENT","DEFAULT_LTR_KEYBOARD_MOVEMENT","DEFAULT_RTL_KEYBOARD_MOVEMENT","KeyboardMovementContextProvider","getSearchText","KeyboardMovementProvider","_a","children","_b","loopable","_c","searchable","_d","horizontal","_e","includeDisabled","propIncrementKeys","incrementKeys","propDecrementKeys","decrementKeys","propJumpToFirstKeys","jumpToFirstKeys","propJumpToLastKeys","jumpToLastKeys","isRTL","dir","defaults","watching","configuration","config","current","value","attach","element","push","content","detach","filter","cache","_jsx","__assign"],"sources":["E:\\WebDevelop\\React\\Project 07\\movies-app\\node_modules\\@react-md\\utils\\src\\keyboardMovement\\KeyboardMovementProvider.tsx"],"sourcesContent":["import type { ReactElement, ReactNode } from \"react\";\nimport { useMemo, useRef } from \"react\";\n\nimport { useDir } from \"../Dir\";\nimport {\n  DEFAULT_KEYBOARD_MOVEMENT,\n  DEFAULT_LTR_KEYBOARD_MOVEMENT,\n  DEFAULT_RTL_KEYBOARD_MOVEMENT,\n  KeyboardMovementContextProvider,\n} from \"./movementContext\";\nimport type {\n  KeyboardFocusContext,\n  KeyboardFocusElementData,\n  KeyboardMovementBehavior,\n  KeyboardMovementConfig,\n  KeyboardMovementConfiguration,\n} from \"./types\";\nimport { getSearchText } from \"./utils\";\n\n/**\n * @remarks \\@since 5.0.0\n */\nexport interface KeyboardMovementProviderProps\n  extends KeyboardMovementBehavior,\n    KeyboardMovementConfiguration {\n  children: ReactNode;\n}\n\n/**\n * @example\n * Main Usage\n * ```tsx\n * function Example() {\n *   return (\n *     <KeyboardMovementProvider>\n *       <CustomKeyboardFocusWidget />\n *     </KeyboardMovementProvider>\n *   );\n * }\n *\n * function CustomKeyboardFocusWidget() {\n *   const { focusIndex: _focusIndex, ...eventHandlers } = useKeyboardFocus();\n *   return (\n *     <div {...eventHandlers}>\n *       <FocusableChild />\n *       <FocusableChild />\n *       <FocusableChild />\n *       <FocusableChild />\n *     </div>\n *   );\n * }\n *\n * function FocusableChild() {\n *   const refCallback = useKeyboardFocusableElement()\n *\n *   return <div role=\"menuitem\" tabIndex={-1} ref={refCallback}>Content</div>;\n * }\n * ```\n *\n * @remarks \\@since 5.0.0\n */\nexport function KeyboardMovementProvider({\n  children,\n  loopable = false,\n  searchable = false,\n  horizontal = false,\n  includeDisabled = false,\n  incrementKeys: propIncrementKeys,\n  decrementKeys: propDecrementKeys,\n  jumpToFirstKeys: propJumpToFirstKeys,\n  jumpToLastKeys: propJumpToLastKeys,\n}: KeyboardMovementProviderProps): ReactElement {\n  const isRTL = useDir().dir === \"rtl\";\n  let defaults: Readonly<Required<KeyboardMovementConfiguration>>;\n  if (horizontal) {\n    defaults = isRTL\n      ? DEFAULT_RTL_KEYBOARD_MOVEMENT\n      : DEFAULT_LTR_KEYBOARD_MOVEMENT;\n  } else {\n    defaults = DEFAULT_KEYBOARD_MOVEMENT;\n  }\n\n  const incrementKeys = propIncrementKeys || defaults.incrementKeys;\n  const decrementKeys = propDecrementKeys || defaults.decrementKeys;\n  const jumpToFirstKeys = propJumpToFirstKeys || defaults.jumpToFirstKeys;\n  const jumpToLastKeys = propJumpToLastKeys || defaults.jumpToLastKeys;\n\n  const watching = useRef<KeyboardFocusElementData[]>([]);\n  const configuration: KeyboardMovementConfig = {\n    incrementKeys,\n    decrementKeys,\n    jumpToFirstKeys,\n    jumpToLastKeys,\n  };\n  const config = useRef(configuration);\n  config.current = configuration;\n\n  const value = useMemo<KeyboardFocusContext>(\n    () => ({\n      attach(element) {\n        watching.current.push({\n          element,\n          content: getSearchText(element, searchable),\n        });\n      },\n      detach(element) {\n        watching.current = watching.current.filter(\n          (cache) => cache.element !== element\n        );\n      },\n      watching,\n      config,\n      loopable,\n      searchable,\n      horizontal,\n      includeDisabled: includeDisabled,\n    }),\n    [horizontal, includeDisabled, loopable, searchable]\n  );\n\n  return (\n    <KeyboardMovementContextProvider value={value}>\n      {children}\n    </KeyboardMovementContextProvider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}