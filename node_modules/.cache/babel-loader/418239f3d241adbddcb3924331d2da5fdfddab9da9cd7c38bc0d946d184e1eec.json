{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { forwardRef, useCallback, useMemo, useRef } from \"react\";\nimport cn from \"classnames\";\nimport { useIcon } from \"@react-md/icon\";\nimport { useFixedPositioning } from \"@react-md/transition\";\nimport { BELOW_CENTER_ANCHOR, bem, DEFAULT_GET_ITEM_VALUE, tryToSubmitRelatedForm, useCloseOnOutsideClick, useEnsuredRef, useToggle } from \"@react-md/utils\";\nimport { useFormTheme } from \"../FormThemeProvider\";\nimport { FloatingLabel } from \"../label/FloatingLabel\";\nimport { TextFieldContainer } from \"../text-field/TextFieldContainer\";\nimport { useFocusState } from \"../useFocusState\";\nimport { Listbox } from \"./Listbox\";\nimport { defaultIsOptionDisabled, getDisplayLabel as DEFAULT_GET_DISPLAY_LABEL, getOptionId as DEFAULT_GET_OPTION_ID, getOptionLabel as DEFAULT_GET_OPTION_LABEL } from \"./utils\";\nvar block = bem(\"rmd-select\");\n/**\n * This component is an accessible version of the `<select>` element that allows\n * for some more custom styles by using the `@react-md/list` package to render\n * the list of options.\n *\n * The `Select` component **must be controlled** with a `value` and `onChange`\n * handler.\n *\n * Note: Since this is not a native `<select>` component, the current value will\n * be rendered in an `<input type=\"hidden\" />` element so that the value can be\n * sent along in forms. It is highly recommended to always provide a `name` prop\n * so this value is sent.\n */\nexport var Select = forwardRef(function Select(_a, forwardedRef) {\n  var onBlur = _a.onBlur,\n    onFocus = _a.onFocus,\n    onKeyDown = _a.onKeyDown,\n    onClick = _a.onClick,\n    className = _a.className,\n    label = _a.label,\n    labelStyle = _a.labelStyle,\n    labelClassName = _a.labelClassName,\n    displayLabelStyle = _a.displayLabelStyle,\n    displayLabelClassName = _a.displayLabelClassName,\n    propListboxStyle = _a.listboxStyle,\n    listboxClassName = _a.listboxClassName,\n    _b = _a.anchor,\n    anchor = _b === void 0 ? BELOW_CENTER_ANCHOR : _b,\n    propTheme = _a.theme,\n    _c = _a.dense,\n    dense = _c === void 0 ? false : _c,\n    _d = _a.inline,\n    inline = _d === void 0 ? false : _d,\n    _e = _a.error,\n    error = _e === void 0 ? false : _e,\n    _f = _a.stretch,\n    stretch = _f === void 0 ? false : _f,\n    _g = _a.disabled,\n    disabled = _g === void 0 ? false : _g,\n    _h = _a.isLeftAddon,\n    isLeftAddon = _h === void 0 ? true : _h,\n    _j = _a.isRightAddon,\n    isRightAddon = _j === void 0 ? true : _j,\n    propUnderlineDirection = _a.underlineDirection,\n    _k = _a.listboxWidth,\n    listboxWidth = _k === void 0 ? \"equal\" : _k,\n    _l = _a.portal,\n    portal = _l === void 0 ? true : _l,\n    portalInto = _a.portalInto,\n    portalIntoId = _a.portalIntoId,\n    name = _a.name,\n    options = _a.options,\n    _m = _a.labelKey,\n    labelKey = _m === void 0 ? \"label\" : _m,\n    _o = _a.valueKey,\n    valueKey = _o === void 0 ? \"value\" : _o,\n    _p = _a.getOptionId,\n    getOptionId = _p === void 0 ? DEFAULT_GET_OPTION_ID : _p,\n    _q = _a.getOptionLabel,\n    getOptionLabel = _q === void 0 ? DEFAULT_GET_OPTION_LABEL : _q,\n    _r = _a.getOptionValue,\n    getOptionValue = _r === void 0 ? DEFAULT_GET_ITEM_VALUE : _r,\n    _s = _a.getDisplayLabel,\n    getDisplayLabel = _s === void 0 ? DEFAULT_GET_DISPLAY_LABEL : _s,\n    _t = _a.isOptionDisabled,\n    isOptionDisabled = _t === void 0 ? defaultIsOptionDisabled : _t,\n    _u = _a.disableLeftAddon,\n    disableLeftAddon = _u === void 0 ? false : _u,\n    _v = _a.disableMovementChange,\n    disableMovementChange = _v === void 0 ? false : _v,\n    _w = _a.closeOnResize,\n    closeOnResize = _w === void 0 ? false : _w,\n    _x = _a.closeOnScroll,\n    closeOnScroll = _x === void 0 ? false : _x,\n    readOnly = _a.readOnly,\n    placeholder = _a.placeholder,\n    value = _a.value,\n    onChange = _a.onChange,\n    propRightChildren = _a.rightChildren,\n    props = __rest(_a, [\"onBlur\", \"onFocus\", \"onKeyDown\", \"onClick\", \"className\", \"label\", \"labelStyle\", \"labelClassName\", \"displayLabelStyle\", \"displayLabelClassName\", \"listboxStyle\", \"listboxClassName\", \"anchor\", \"theme\", \"dense\", \"inline\", \"error\", \"stretch\", \"disabled\", \"isLeftAddon\", \"isRightAddon\", \"underlineDirection\", \"listboxWidth\", \"portal\", \"portalInto\", \"portalIntoId\", \"name\", \"options\", \"labelKey\", \"valueKey\", \"getOptionId\", \"getOptionLabel\", \"getOptionValue\", \"getDisplayLabel\", \"isOptionDisabled\", \"disableLeftAddon\", \"disableMovementChange\", \"closeOnResize\", \"closeOnScroll\", \"readOnly\", \"placeholder\", \"value\", \"onChange\", \"rightChildren\"]);\n  var id = props.id;\n  var rightChildren = useIcon(\"dropdown\", propRightChildren);\n  var _y = useFormTheme({\n      theme: propTheme,\n      underlineDirection: propUnderlineDirection\n    }),\n    theme = _y.theme,\n    underlineDirection = _y.underlineDirection;\n  var valued = typeof value === \"number\" || !!value;\n  var displayValue = useMemo(function () {\n    var currentOption = options.find(function (option) {\n      return getOptionValue(option, valueKey) === value;\n    }) || null;\n    return getDisplayLabel(currentOption, labelKey, !disableLeftAddon);\n  }, [options, getDisplayLabel, labelKey, disableLeftAddon, getOptionValue, valueKey, value]);\n  var _z = __read(useToggle(false), 3),\n    visible = _z[0],\n    show = _z[1],\n    hide = _z[2];\n  var _0 = __read(useFocusState({\n      onBlur: onBlur,\n      onFocus: onFocus\n    }), 3),\n    focused = _0[0],\n    handleFocus = _0[1],\n    handleBlur = _0[2];\n  var handleKeyDown = useCallback(function (event) {\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n    if (tryToSubmitRelatedForm(event)) {\n      return;\n    }\n    switch (event.key) {\n      case \" \":\n      case \"ArrowUp\":\n      case \"ArrowDown\":\n        // prevent page scroll\n        event.preventDefault();\n        show();\n        break;\n      // no default\n    }\n  }, [onKeyDown, show]);\n  var _1 = __read(useEnsuredRef(forwardedRef), 2),\n    ref = _1[0],\n    refHandler = _1[1];\n  useCloseOnOutsideClick({\n    enabled: visible,\n    element: ref.current,\n    onOutsideClick: hide\n  });\n  var nodeRef = useRef(null);\n  var _2 = useFixedPositioning({\n      style: propListboxStyle,\n      fixedTo: ref,\n      nodeRef: nodeRef,\n      anchor: anchor,\n      onScroll: closeOnScroll ? hide : undefined,\n      onResize: closeOnResize ? hide : undefined,\n      transformOrigin: true,\n      width: listboxWidth,\n      onEntering: function () {\n        var _a;\n        // can't do onEnter since the positioning styles haven't been applied to the\n        // dom node at this time. this means the list is the last element in the DOM\n        // when portalled, which causes the page to scroll to the end. Moving it to\n        // onEntering will ensure the styles have been applied and won't cause page\n        // scrolling\n        (_a = nodeRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      }\n    }),\n    listboxRef = _2.ref,\n    listboxStyle = _2.style,\n    transitionOptions = _2.callbacks;\n  var handleClick = useCallback(function (event) {\n    if (onClick) {\n      onClick(event);\n    }\n    show();\n  }, [onClick, show]);\n  var handleKeyboardClose = useCallback(function () {\n    hide();\n    if (ref.current) {\n      ref.current.focus();\n    }\n  }, [hide, ref]);\n  var labelId = \"\".concat(id, \"-label\");\n  var valueId = \"\".concat(id, \"-value\");\n  var listboxId = \"\".concat(id, \"-listbox\");\n  var displayValueId = \"\".concat(id, \"-display-value\");\n  return _jsxs(_Fragment, {\n    children: [_jsxs(TextFieldContainer, __assign({}, props, {\n      \"aria-haspopup\": \"listbox\",\n      \"aria-disabled\": disabled || undefined,\n      ref: refHandler,\n      role: \"button\",\n      dense: dense,\n      tabIndex: disabled ? undefined : 0,\n      label: !!label,\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      onKeyDown: disabled ? undefined : handleKeyDown,\n      onClick: disabled ? undefined : handleClick,\n      theme: theme,\n      error: error,\n      active: focused || visible,\n      inline: inline,\n      stretch: stretch,\n      disabled: disabled,\n      underlineDirection: underlineDirection,\n      isLeftAddon: isLeftAddon,\n      isRightAddon: isRightAddon,\n      rightChildren: rightChildren,\n      className: cn(block({\n        disabled: disabled\n      }), className)\n    }, {\n      children: [_jsx(FloatingLabel, __assign({\n        id: labelId,\n        style: labelStyle,\n        className: cn(block(\"label\"), labelClassName),\n        htmlFor: id,\n        error: error,\n        active: valued && (focused || visible),\n        valued: valued,\n        floating: focused || valued || visible,\n        dense: dense,\n        disabled: disabled,\n        component: \"span\"\n      }, {\n        children: label\n      })), _jsx(\"span\", __assign({\n        id: displayValueId,\n        style: displayLabelStyle,\n        className: cn(block(\"value\", {\n          disabled: disabled,\n          readonly: readOnly,\n          placeholder: !valued && placeholder,\n          \"placeholder-active\": !valued && placeholder && (focused || visible)\n        }), displayLabelClassName)\n      }, {\n        children: displayValue || !valued && placeholder\n      })), _jsx(\"input\", {\n        id: valueId,\n        type: \"hidden\",\n        name: name,\n        value: value\n      })]\n    })), _jsx(Listbox, __assign({\n      id: listboxId,\n      ref: listboxRef\n    }, transitionOptions, {\n      \"aria-labelledby\": id,\n      style: listboxStyle,\n      className: listboxClassName,\n      name: name,\n      readOnly: readOnly,\n      portal: portal,\n      portalInto: portalInto,\n      portalIntoId: portalIntoId,\n      value: value,\n      onChange: onChange,\n      visible: visible,\n      temporary: true,\n      onRequestClose: handleKeyboardClose,\n      options: options,\n      labelKey: labelKey,\n      valueKey: valueKey,\n      getOptionId: getOptionId,\n      getOptionLabel: getOptionLabel,\n      getOptionValue: getOptionValue,\n      isOptionDisabled: isOptionDisabled,\n      disableMovementChange: disableMovementChange\n    }))]\n  });\n});","map":{"version":3,"names":["forwardRef","useCallback","useMemo","useRef","cn","useIcon","useFixedPositioning","BELOW_CENTER_ANCHOR","bem","DEFAULT_GET_ITEM_VALUE","tryToSubmitRelatedForm","useCloseOnOutsideClick","useEnsuredRef","useToggle","useFormTheme","FloatingLabel","TextFieldContainer","useFocusState","Listbox","defaultIsOptionDisabled","getDisplayLabel","DEFAULT_GET_DISPLAY_LABEL","getOptionId","DEFAULT_GET_OPTION_ID","getOptionLabel","DEFAULT_GET_OPTION_LABEL","block","Select","_a","forwardedRef","onBlur","onFocus","onKeyDown","onClick","className","label","labelStyle","labelClassName","displayLabelStyle","displayLabelClassName","propListboxStyle","listboxStyle","listboxClassName","_b","anchor","propTheme","theme","_c","dense","_d","inline","_e","error","_f","stretch","_g","disabled","_h","isLeftAddon","_j","isRightAddon","propUnderlineDirection","underlineDirection","_k","listboxWidth","_l","portal","portalInto","portalIntoId","name","options","_m","labelKey","_o","valueKey","_p","_q","_r","getOptionValue","_s","_t","isOptionDisabled","_u","disableLeftAddon","_v","disableMovementChange","_w","closeOnResize","_x","closeOnScroll","readOnly","placeholder","value","onChange","propRightChildren","rightChildren","props","__rest","id","_y","valued","displayValue","currentOption","find","option","_z","__read","visible","show","hide","_0","focused","handleFocus","handleBlur","handleKeyDown","event","key","preventDefault","_1","ref","refHandler","enabled","element","current","onOutsideClick","nodeRef","_2","style","fixedTo","onScroll","undefined","onResize","transformOrigin","width","onEntering","focus","listboxRef","transitionOptions","callbacks","handleClick","handleKeyboardClose","labelId","concat","valueId","listboxId","displayValueId","_jsxs","_Fragment","children","__assign","role","tabIndex","active","_jsx","htmlFor","floating","component","readonly","type","temporary","onRequestClose"],"sources":["E:\\WebDevelop\\React\\Project 07\\movies-app\\node_modules\\@react-md\\form\\src\\select\\Select.tsx"],"sourcesContent":["import type { CSSProperties, HTMLAttributes, ReactNode } from \"react\";\nimport { forwardRef, useCallback, useMemo, useRef } from \"react\";\nimport cn from \"classnames\";\nimport { useIcon } from \"@react-md/icon\";\nimport type { ListElement } from \"@react-md/list\";\nimport { useFixedPositioning } from \"@react-md/transition\";\nimport type { PositionAnchor, PositionWidth } from \"@react-md/utils\";\nimport {\n  BELOW_CENTER_ANCHOR,\n  bem,\n  DEFAULT_GET_ITEM_VALUE,\n  tryToSubmitRelatedForm,\n  useCloseOnOutsideClick,\n  useEnsuredRef,\n  useToggle,\n} from \"@react-md/utils\";\n\nimport { useFormTheme } from \"../FormThemeProvider\";\nimport { FloatingLabel } from \"../label/FloatingLabel\";\nimport type { TextFieldContainerOptions } from \"../text-field/TextFieldContainer\";\nimport { TextFieldContainer } from \"../text-field/TextFieldContainer\";\nimport { useFocusState } from \"../useFocusState\";\nimport type { ListboxOptions } from \"./Listbox\";\nimport { Listbox } from \"./Listbox\";\nimport {\n  defaultIsOptionDisabled,\n  getDisplayLabel as DEFAULT_GET_DISPLAY_LABEL,\n  getOptionId as DEFAULT_GET_OPTION_ID,\n  getOptionLabel as DEFAULT_GET_OPTION_LABEL,\n} from \"./utils\";\n\ntype FakeSelectAttributes = Omit<\n  HTMLAttributes<HTMLDivElement>,\n  \"placeholder\" | \"children\" | \"onChange\" | \"defaultValue\" | \"value\"\n>;\n\nexport interface SelectProps\n  extends FakeSelectAttributes,\n    TextFieldContainerOptions,\n    ListboxOptions {\n  /**\n   * The id for the select component. This is required for a11y and will be used\n   * to generate ids for the listbox and each option within the listbox.\n   */\n  id: string;\n\n  /**\n   * Boolean if the select is currently disabled.\n   */\n  disabled?: boolean;\n\n  /**\n   * An optional floating label to use with the select.\n   */\n  label?: ReactNode;\n\n  /**\n   * An optional style to apply to the label element.\n   */\n  labelStyle?: CSSProperties;\n\n  /**\n   * An optional className to apply to the label element.\n   */\n  labelClassName?: string;\n\n  /**\n   * An optional style to apply to the current display value within the\n   * `Select`'s button component.\n   */\n  displayLabelStyle?: CSSProperties;\n\n  /**\n   * An optional className to apply to the current display value within the\n   * `Select`'s button component.\n   */\n  displayLabelClassName?: string;\n\n  /**\n   * An optional style to apply to the listbox.\n   */\n  listboxStyle?: CSSProperties;\n\n  /**\n   * An optional className to apply to the listbox.\n   */\n  listboxClassName?: string;\n\n  /**\n   * Boolean if the select should act as a read only select field which just\n   * allows for all the options to be visible when toggled open.\n   */\n  readOnly?: boolean;\n\n  /**\n   * An optional placeholder text to show while the select is unvalued and is\n   * either currently focused or the `label` prop was not provided.\n   */\n  placeholder?: ReactNode;\n\n  /**\n   * A function that gets called whenever the Select's value changes so that the\n   * selected option can be converted into a renderable element to show in the\n   * Select's button. The default behavior is to use the `getOptionLabel`\n   * default behavior. If the option is an object and the `disableLeftAddon`\n   * prop has not been disabled, it will then attempt to also extract a\n   * `leftAddon` from the option and use the `TextIconSpacing` component with\n   * the label + icon/avatar.\n   */\n  getDisplayLabel?: typeof DEFAULT_GET_DISPLAY_LABEL;\n\n  /**\n   * The positioning configuration for how the listbox should be anchored to the\n   * select button.\n   */\n  anchor?: PositionAnchor;\n\n  /**\n   * The sizing behavior for the listbox. It will default to have the same width\n   * as the select button, but it is also possible to either have the\n   * `min-width` be the width of the select button or just automatically\n   * determine the width.\n   *\n   * The sizing behavior will always ensure that the left and right bounds of\n   * the listbox appear within the viewport.\n   */\n  listboxWidth?: PositionWidth;\n\n  /**\n   * Boolean if the `Select`'s button display value should not attempt to\n   * extract a `leftAddon` from the current selected option to display.\n   */\n  disableLeftAddon?: boolean;\n\n  /**\n   * Boolean if the select's listbox should not hide if the user resizes the\n   * browser while it is visible.\n   */\n  closeOnResize?: boolean;\n\n  /**\n   * Boolean if the select's listbox should not hide if the user scrolls the\n   * page while it is visible.\n   */\n  closeOnScroll?: boolean;\n\n  /**\n   * An optional icon to display to the right of the select. This should\n   * normally be a dropdown icon to replace the native select's dropdown icon.\n   * If this is set to `null`, the native select's dropdown icon will be\n   * displayed instead.\n   *\n   * This defaults to the `IconProvider`'s dropdown icon from the\n   * `@react-md/icon` package.\n   */\n  rightChildren?: ReactNode;\n}\n\nconst block = bem(\"rmd-select\");\n\n/**\n * This component is an accessible version of the `<select>` element that allows\n * for some more custom styles by using the `@react-md/list` package to render\n * the list of options.\n *\n * The `Select` component **must be controlled** with a `value` and `onChange`\n * handler.\n *\n * Note: Since this is not a native `<select>` component, the current value will\n * be rendered in an `<input type=\"hidden\" />` element so that the value can be\n * sent along in forms. It is highly recommended to always provide a `name` prop\n * so this value is sent.\n */\nexport const Select = forwardRef<HTMLDivElement, SelectProps>(function Select(\n  {\n    onBlur,\n    onFocus,\n    onKeyDown,\n    onClick,\n    className,\n    label,\n    labelStyle,\n    labelClassName,\n    displayLabelStyle,\n    displayLabelClassName,\n    listboxStyle: propListboxStyle,\n    listboxClassName,\n    anchor = BELOW_CENTER_ANCHOR,\n    theme: propTheme,\n    dense = false,\n    inline = false,\n    error = false,\n    stretch = false,\n    disabled = false,\n    isLeftAddon = true,\n    isRightAddon = true,\n    underlineDirection: propUnderlineDirection,\n    listboxWidth = \"equal\",\n    portal = true,\n    portalInto,\n    portalIntoId,\n    name,\n    options,\n    labelKey = \"label\",\n    valueKey = \"value\",\n    getOptionId = DEFAULT_GET_OPTION_ID,\n    getOptionLabel = DEFAULT_GET_OPTION_LABEL,\n    getOptionValue = DEFAULT_GET_ITEM_VALUE,\n    getDisplayLabel = DEFAULT_GET_DISPLAY_LABEL,\n    isOptionDisabled = defaultIsOptionDisabled,\n    disableLeftAddon = false,\n    disableMovementChange = false,\n    closeOnResize = false,\n    closeOnScroll = false,\n    readOnly,\n    placeholder,\n    value,\n    onChange,\n    rightChildren: propRightChildren,\n    ...props\n  },\n  forwardedRef\n) {\n  const { id } = props;\n  const rightChildren = useIcon(\"dropdown\", propRightChildren);\n  const { theme, underlineDirection } = useFormTheme({\n    theme: propTheme,\n    underlineDirection: propUnderlineDirection,\n  });\n\n  const valued = typeof value === \"number\" || !!value;\n  const displayValue = useMemo(() => {\n    const currentOption =\n      options.find((option) => getOptionValue(option, valueKey) === value) ||\n      null;\n\n    return getDisplayLabel(currentOption, labelKey, !disableLeftAddon);\n  }, [\n    options,\n    getDisplayLabel,\n    labelKey,\n    disableLeftAddon,\n    getOptionValue,\n    valueKey,\n    value,\n  ]);\n\n  const [visible, show, hide] = useToggle(false);\n  const [focused, handleFocus, handleBlur] = useFocusState({ onBlur, onFocus });\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n\n      if (tryToSubmitRelatedForm(event)) {\n        return;\n      }\n\n      switch (event.key) {\n        case \" \":\n        case \"ArrowUp\":\n        case \"ArrowDown\":\n          // prevent page scroll\n          event.preventDefault();\n          show();\n          break;\n        // no default\n      }\n    },\n    [onKeyDown, show]\n  );\n\n  const [ref, refHandler] = useEnsuredRef(forwardedRef);\n\n  useCloseOnOutsideClick({\n    enabled: visible,\n    element: ref.current,\n    onOutsideClick: hide,\n  });\n\n  const nodeRef = useRef<ListElement | null>(null);\n  const {\n    ref: listboxRef,\n    style: listboxStyle,\n    callbacks: transitionOptions,\n  } = useFixedPositioning({\n    style: propListboxStyle,\n    fixedTo: ref,\n    nodeRef,\n    anchor,\n    onScroll: closeOnScroll ? hide : undefined,\n    onResize: closeOnResize ? hide : undefined,\n    transformOrigin: true,\n    width: listboxWidth,\n    onEntering() {\n      // can't do onEnter since the positioning styles haven't been applied to the\n      // dom node at this time. this means the list is the last element in the DOM\n      // when portalled, which causes the page to scroll to the end. Moving it to\n      // onEntering will ensure the styles have been applied and won't cause page\n      // scrolling\n      nodeRef.current?.focus();\n    },\n  });\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLDivElement>) => {\n      if (onClick) {\n        onClick(event);\n      }\n\n      show();\n    },\n    [onClick, show]\n  );\n\n  const handleKeyboardClose = useCallback(() => {\n    hide();\n    if (ref.current) {\n      ref.current.focus();\n    }\n  }, [hide, ref]);\n\n  const labelId = `${id}-label`;\n  const valueId = `${id}-value`;\n  const listboxId = `${id}-listbox`;\n  const displayValueId = `${id}-display-value`;\n\n  return (\n    <>\n      <TextFieldContainer\n        {...props}\n        aria-haspopup=\"listbox\"\n        aria-disabled={disabled || undefined}\n        ref={refHandler}\n        role=\"button\"\n        dense={dense}\n        tabIndex={disabled ? undefined : 0}\n        label={!!label}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={disabled ? undefined : handleKeyDown}\n        onClick={disabled ? undefined : handleClick}\n        theme={theme}\n        error={error}\n        active={focused || visible}\n        inline={inline}\n        stretch={stretch}\n        disabled={disabled}\n        underlineDirection={underlineDirection}\n        isLeftAddon={isLeftAddon}\n        isRightAddon={isRightAddon}\n        rightChildren={rightChildren}\n        className={cn(block({ disabled }), className)}\n      >\n        <FloatingLabel\n          id={labelId}\n          style={labelStyle}\n          className={cn(block(\"label\"), labelClassName)}\n          htmlFor={id}\n          error={error}\n          active={valued && (focused || visible)}\n          valued={valued}\n          floating={focused || valued || visible}\n          dense={dense}\n          disabled={disabled}\n          component=\"span\"\n        >\n          {label}\n        </FloatingLabel>\n        <span\n          id={displayValueId}\n          style={displayLabelStyle}\n          className={cn(\n            block(\"value\", {\n              disabled,\n              readonly: readOnly,\n              placeholder: !valued && placeholder,\n              \"placeholder-active\":\n                !valued && placeholder && (focused || visible),\n            }),\n            displayLabelClassName\n          )}\n        >\n          {displayValue || (!valued && placeholder)}\n        </span>\n        <input id={valueId} type=\"hidden\" name={name} value={value} />\n      </TextFieldContainer>\n      <Listbox\n        id={listboxId}\n        ref={listboxRef}\n        {...transitionOptions}\n        aria-labelledby={id}\n        style={listboxStyle}\n        className={listboxClassName}\n        name={name}\n        readOnly={readOnly}\n        portal={portal}\n        portalInto={portalInto}\n        portalIntoId={portalIntoId}\n        value={value}\n        onChange={onChange}\n        visible={visible}\n        temporary\n        onRequestClose={handleKeyboardClose}\n        options={options}\n        labelKey={labelKey}\n        valueKey={valueKey}\n        getOptionId={getOptionId}\n        getOptionLabel={getOptionLabel}\n        getOptionValue={getOptionValue}\n        isOptionDisabled={isOptionDisabled}\n        disableMovementChange={disableMovementChange}\n      />\n    </>\n  );\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}