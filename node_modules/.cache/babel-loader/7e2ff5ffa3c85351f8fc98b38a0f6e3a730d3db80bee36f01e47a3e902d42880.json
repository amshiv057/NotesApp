{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { useCallback, useState } from \"react\";\nimport { useRefCache } from \"./useRefCache\";\n/**\n * This hooks provides an easy way to toggle a boolean flag for React\n * components.  The main use case for this will be toggling the visibility of\n * something. All the provided actions are guaranteed to never change.\n *\n * @param defaultToggled - Boolean if the visibility should be enabled first\n * render.\n * @returns an array containing the toggled state, an enable function, a disable\n * function, a toggle function, and then a manual set toggle function.\n */\nexport function useToggle(defaultToggled) {\n  var _a = __read(useState(defaultToggled), 2),\n    toggled = _a[0],\n    setToggled = _a[1];\n  var previous = useRefCache(toggled);\n  var enable = useCallback(function () {\n    if (!previous.current) {\n      setToggled(true);\n    }\n    // disabled since useRefCache\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var disable = useCallback(function () {\n    if (previous.current) {\n      setToggled(false);\n    }\n    // disabled since useRefCache\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var toggle = useCallback(function () {\n    setToggled(function (prevVisible) {\n      return !prevVisible;\n    });\n  }, []);\n  return [toggled, enable, disable, toggle, setToggled];\n}","map":{"version":3,"names":["useCallback","useState","useRefCache","useToggle","defaultToggled","_a","__read","toggled","setToggled","previous","enable","current","disable","toggle","prevVisible"],"sources":["E:\\WebDevelop\\React\\Project 07\\movies-app\\node_modules\\@react-md\\utils\\src\\useToggle.ts"],"sourcesContent":["import type { Dispatch, SetStateAction } from \"react\";\nimport { useCallback, useState } from \"react\";\n\nimport { useRefCache } from \"./useRefCache\";\n\ntype Enable = () => void;\ntype Disable = () => void;\ntype Toggle = () => void;\ntype SetToggle = Dispatch<SetStateAction<boolean>>;\n\ntype ReturnValue = [boolean, Enable, Disable, Toggle, SetToggle];\n\n/**\n * This hooks provides an easy way to toggle a boolean flag for React\n * components.  The main use case for this will be toggling the visibility of\n * something. All the provided actions are guaranteed to never change.\n *\n * @param defaultToggled - Boolean if the visibility should be enabled first\n * render.\n * @returns an array containing the toggled state, an enable function, a disable\n * function, a toggle function, and then a manual set toggle function.\n */\nexport function useToggle(\n  defaultToggled: boolean | (() => boolean)\n): ReturnValue {\n  const [toggled, setToggled] = useState(defaultToggled);\n  const previous = useRefCache(toggled);\n\n  const enable = useCallback(() => {\n    if (!previous.current) {\n      setToggled(true);\n    }\n    // disabled since useRefCache\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const disable = useCallback(() => {\n    if (previous.current) {\n      setToggled(false);\n    }\n    // disabled since useRefCache\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const toggle = useCallback(() => {\n    setToggled((prevVisible) => !prevVisible);\n  }, []);\n\n  return [toggled, enable, disable, toggle, setToggled];\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,SAASC,WAAW,QAAQ,eAAe;AAS3C;;;;;;;;;;AAUA,OAAM,SAAUC,SAASA,CACvBC,cAAyC;EAEnC,IAAAC,EAAA,GAAAC,MAAA,CAAwBL,QAAQ,CAACG,cAAc,CAAC;IAA/CG,OAAO,GAAAF,EAAA;IAAEG,UAAU,GAAAH,EAAA,GAA4B;EACtD,IAAMI,QAAQ,GAAGP,WAAW,CAACK,OAAO,CAAC;EAErC,IAAMG,MAAM,GAAGV,WAAW,CAAC;IACzB,IAAI,CAACS,QAAQ,CAACE,OAAO,EAAE;MACrBH,UAAU,CAAC,IAAI,CAAC;;IAElB;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EACN,IAAMI,OAAO,GAAGZ,WAAW,CAAC;IAC1B,IAAIS,QAAQ,CAACE,OAAO,EAAE;MACpBH,UAAU,CAAC,KAAK,CAAC;;IAEnB;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMK,MAAM,GAAGb,WAAW,CAAC;IACzBQ,UAAU,CAAC,UAACM,WAAW;MAAK,QAACA,WAAW;IAAZ,CAAY,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAACP,OAAO,EAAEG,MAAM,EAAEE,OAAO,EAAEC,MAAM,EAAEL,UAAU,CAAC;AACvD"},"metadata":{},"sourceType":"module","externalDependencies":[]}