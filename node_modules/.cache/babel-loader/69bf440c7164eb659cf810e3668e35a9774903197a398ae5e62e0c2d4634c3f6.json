{"ast":null,"code":"import { defaults } from \"../defaults\";\nimport { DEFAULT_SEARCH_OPTIONS, getSearchString } from \"./utils\";\n/**\n * Filters a list by ensuring that all items contain the query string in order\n * anywhere in it's own value.\n *\n * @param query - The current query string\n * @param searchable - The list of searchable items that should be filtered\n * @param options - All the search options to use\n * @returns A filtered list of all the searchable items based on the query\n * string.\n */\nexport function caseInsensitiveFilter(query, searchable, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _a = defaults(options, DEFAULT_SEARCH_OPTIONS),\n    getItemValue = _a.getItemValue,\n    valueKey = _a.valueKey,\n    trim = _a.trim,\n    ignoreWhitespace = _a.ignoreWhitespace,\n    _b = _a.startsWith,\n    startsWith = _b === void 0 ? false : _b;\n  query = getSearchString(query, true, trim, ignoreWhitespace);\n  if (!query || !searchable.length) {\n    return searchable;\n  }\n  return searchable.filter(function (item) {\n    var value = getSearchString(getItemValue(item, valueKey), true, trim, ignoreWhitespace);\n    if (startsWith) {\n      return value.indexOf(query) === 0;\n    }\n    return value.indexOf(query) !== -1;\n  });\n}","map":{"version":3,"names":["defaults","DEFAULT_SEARCH_OPTIONS","getSearchString","caseInsensitiveFilter","query","searchable","options","_a","getItemValue","valueKey","trim","ignoreWhitespace","_b","startsWith","length","filter","item","value","indexOf"],"sources":["E:\\WebDevelop\\React\\Project 07\\movies-app\\node_modules\\@react-md\\utils\\src\\search\\caseInsensitiveFilter.ts"],"sourcesContent":["import { defaults } from \"../defaults\";\nimport type { SearchOptions } from \"./utils\";\nimport { DEFAULT_SEARCH_OPTIONS, getSearchString } from \"./utils\";\n\nexport interface CaseInsensitiveOptions<T = unknown> extends SearchOptions<T> {\n  /**\n   * Boolean if the filter should also exclude all items that do not start with\n   * the query string. The default behavior is to return all matches that\n   * contain the query string anywhere.\n   */\n  startsWith?: boolean;\n}\n\n/**\n * Filters a list by ensuring that all items contain the query string in order\n * anywhere in it's own value.\n *\n * @param query - The current query string\n * @param searchable - The list of searchable items that should be filtered\n * @param options - All the search options to use\n * @returns A filtered list of all the searchable items based on the query\n * string.\n */\nexport function caseInsensitiveFilter<T = unknown>(\n  query: string,\n  searchable: readonly T[],\n  options: CaseInsensitiveOptions<T> = {}\n): readonly T[] {\n  const {\n    getItemValue,\n    valueKey,\n    trim,\n    ignoreWhitespace,\n    startsWith = false,\n  } = defaults(options, DEFAULT_SEARCH_OPTIONS);\n\n  query = getSearchString(query, true, trim, ignoreWhitespace);\n  if (!query || !searchable.length) {\n    return searchable;\n  }\n\n  return searchable.filter((item) => {\n    const value = getSearchString(\n      getItemValue(item, valueKey),\n      true,\n      trim,\n      ignoreWhitespace\n    );\n\n    if (startsWith) {\n      return value.indexOf(query) === 0;\n    }\n\n    return value.indexOf(query) !== -1;\n  });\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,aAAa;AAEtC,SAASC,sBAAsB,EAAEC,eAAe,QAAQ,SAAS;AAWjE;;;;;;;;;;AAUA,OAAM,SAAUC,qBAAqBA,CACnCC,KAAa,EACbC,UAAwB,EACxBC,OAAuC;EAAvC,IAAAA,OAAA;IAAAA,OAAA,KAAuC;EAAA;EAEjC,IAAAC,EAAA,GAMFP,QAAQ,CAACM,OAAO,EAAEL,sBAAsB,CAAC;IAL3CO,YAAY,GAAAD,EAAA,CAAAC,YAAA;IACZC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;IACRC,IAAI,GAAAH,EAAA,CAAAG,IAAA;IACJC,gBAAgB,GAAAJ,EAAA,CAAAI,gBAAA;IAChBC,EAAA,GAAAL,EAAA,CAAAM,UAAkB;IAAlBA,UAAU,GAAAD,EAAA,cAAG,KAAK,GAAAA,EACyB;EAE7CR,KAAK,GAAGF,eAAe,CAACE,KAAK,EAAE,IAAI,EAAEM,IAAI,EAAEC,gBAAgB,CAAC;EAC5D,IAAI,CAACP,KAAK,IAAI,CAACC,UAAU,CAACS,MAAM,EAAE;IAChC,OAAOT,UAAU;;EAGnB,OAAOA,UAAU,CAACU,MAAM,CAAC,UAACC,IAAI;IAC5B,IAAMC,KAAK,GAAGf,eAAe,CAC3BM,YAAY,CAACQ,IAAI,EAAEP,QAAQ,CAAC,EAC5B,IAAI,EACJC,IAAI,EACJC,gBAAgB,CACjB;IAED,IAAIE,UAAU,EAAE;MACd,OAAOI,KAAK,CAACC,OAAO,CAACd,KAAK,CAAC,KAAK,CAAC;;IAGnC,OAAOa,KAAK,CAACC,OAAO,CAACd,KAAK,CAAC,KAAK,CAAC,CAAC;EACpC,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}