{"ast":null,"code":"var _jsxFileName = \"E:\\\\WebDevelop\\\\React\\\\Project 07\\\\movies-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Sidebar from \"./Components/Sider\";\nimport Editor from \"./Components/Editor\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\nimport \"./index.css\";\nimport React from \"react\";\nimport { data } from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [notes, setNotes] = React.useState(() => JSON.parse(localStorage.getItem(\"notes\")) || []);\n  const [currentNoteId, setCurrentNoteId] = React.useState(notes[0] && notes[0].id || \"\");\n  React.useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown notes title here\"\n    };\n    setNotes(prevNotes => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n  function updateNote(text) {\n    setNotes(oldNotes => {\n      const newArray = [];\n      for (let i = 0; i < oldNotes.length; i++) {\n        const oldNote = oldNotes[i];\n        if (oldNote.id === currentNoteId) {\n          newArray.unshift({\n            ...oldNote,\n            body: text\n          });\n        } else {\n          newArray.push(oldNote);\n        }\n      }\n      return newArray;\n    });\n  }\n  function deleteNote(event, noteId) {\n    event.stopPropagation();\n    setNotes(oldNotes => oldNotes.filter(note => note.id != noteId));\n  }\n  function findCurrentNote() {\n    return notes.find(note => {\n      return note.id === currentNoteId;\n    }) || notes[0];\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [30, 70],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: notes,\n        currentNote: findCurrentNote(),\n        setCurrentNoteId: setCurrentNoteId,\n        newNote: createNewNote,\n        deleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), currentNoteId && notes.length > 0 && /*#__PURE__*/_jsxDEV(Editor, {\n        currentNote: findCurrentNote(),\n        updateNote: updateNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        onClick: createNewNote,\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"h9rVnagE36yNkFkROwCMD8XJBck=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Sidebar","Editor","Split","nanoid","React","data","jsxDEV","_jsxDEV","App","_s","notes","setNotes","useState","JSON","parse","localStorage","getItem","currentNoteId","setCurrentNoteId","id","useEffect","setItem","stringify","createNewNote","newNote","body","prevNotes","updateNote","text","oldNotes","newArray","i","length","oldNote","unshift","push","deleteNote","event","noteId","stopPropagation","filter","note","findCurrentNote","find","children","sizes","direction","className","currentNote","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/WebDevelop/React/Project 07/movies-app/src/App.js"],"sourcesContent":["import Sidebar from \"./Components/Sider\";\nimport Editor from \"./Components/Editor\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\nimport \"./index.css\";\nimport React from \"react\";\nimport { data } from \"./data\";\n\nexport default function App() {\n  const [notes, setNotes] = React.useState(\n    () => JSON.parse(localStorage.getItem(\"notes\")) || []\n  );\n  const [currentNoteId, setCurrentNoteId] = React.useState(\n    (notes[0] && notes[0].id) || \"\"\n  );\n\n  React.useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown notes title here\",\n    };\n    setNotes((prevNotes) => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n  function updateNote(text) {\n    setNotes((oldNotes) => {\n      const newArray = [];\n      for (let i = 0; i < oldNotes.length; i++) {\n        const oldNote = oldNotes[i];\n        if (oldNote.id === currentNoteId) {\n          newArray.unshift({ ...oldNote, body: text });\n        } else {\n          newArray.push(oldNote);\n        }\n      }\n      return newArray;\n    });\n  }\n\n  function deleteNote(event, noteId) {\n    event.stopPropagation();\n    setNotes((oldNotes) => oldNotes.filter((note) => note.id != noteId));\n  }\n  function findCurrentNote() {\n    return (\n      notes.find((note) => {\n        return note.id === currentNoteId;\n      }) || notes[0]\n    );\n  }\n  return (\n    <main>\n      {notes.length > 0 ? (\n        <Split sizes={[30, 70]} direction=\"horizontal\" className=\"split\">\n          <Sidebar\n            notes={notes}\n            currentNote={findCurrentNote()}\n            setCurrentNoteId={setCurrentNoteId}\n            newNote={createNewNote}\n            deleteNote={deleteNote}\n          />\n          {currentNoteId && notes.length > 0 && (\n            <Editor currentNote={findCurrentNote()} updateNote={updateNote} />\n          )}\n        </Split>\n      ) : (\n        <div className=\"no-notes\">\n          <h1>You have no notes</h1>\n          <button className=\"first-note\" onClick={createNewNote}>\n            Create one now\n          </button>\n        </div>\n      )}\n    </main>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}