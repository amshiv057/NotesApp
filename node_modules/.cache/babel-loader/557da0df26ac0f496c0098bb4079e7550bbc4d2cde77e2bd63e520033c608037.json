{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { NestedDialogContextProvider } from \"@react-md/dialog\";\nimport { FormThemeProvider } from \"@react-md/form\";\nimport { IconProvider } from \"@react-md/icon\";\nimport { MenuConfigurationProvider } from \"@react-md/menu\";\nimport { DEFAULT_RIPPLE_CLASSNAMES, DEFAULT_RIPPLE_TIMEOUT, StatesConfig } from \"@react-md/states\";\nimport { AppSizeListener, DEFAULT_APP_SIZE, DEFAULT_DESKTOP_LARGE_MIN_WIDTH, DEFAULT_DESKTOP_MIN_WIDTH, DEFAULT_DIR, DEFAULT_PHONE_MAX_WIDTH, DEFAULT_TABLET_MAX_WIDTH, DEFAULT_TABLET_MIN_WIDTH, Dir, HoverModeProvider, UserInteractionModeListener } from \"@react-md/utils\";\n/**\n * This component allows you to quickly configure different functionality within\n * `react-md` in one place with reasonable defaults.\n */\nexport function Configuration(_a) {\n  var onAppResize = _a.onAppResize,\n    children = _a.children,\n    icons = _a.icons,\n    formTheme = _a.formTheme,\n    _b = _a.defaultDir,\n    defaultDir = _b === void 0 ? DEFAULT_DIR : _b,\n    _c = _a.phoneMaxWidth,\n    phoneMaxWidth = _c === void 0 ? DEFAULT_PHONE_MAX_WIDTH : _c,\n    _d = _a.tabletMinWidth,\n    tabletMinWidth = _d === void 0 ? DEFAULT_TABLET_MIN_WIDTH : _d,\n    _e = _a.tabletMaxWidth,\n    tabletMaxWidth = _e === void 0 ? DEFAULT_TABLET_MAX_WIDTH : _e,\n    _f = _a.desktopMinWidth,\n    desktopMinWidth = _f === void 0 ? DEFAULT_DESKTOP_MIN_WIDTH : _f,\n    _g = _a.desktopLargeMinWidth,\n    desktopLargeMinWidth = _g === void 0 ? DEFAULT_DESKTOP_LARGE_MIN_WIDTH : _g,\n    _h = _a.defaultSize,\n    defaultSize = _h === void 0 ? DEFAULT_APP_SIZE : _h,\n    _j = _a.rippleTimeout,\n    rippleTimeout = _j === void 0 ? DEFAULT_RIPPLE_TIMEOUT : _j,\n    _k = _a.rippleClassNames,\n    rippleClassNames = _k === void 0 ? DEFAULT_RIPPLE_CLASSNAMES : _k,\n    _l = _a.disableRipple,\n    disableRipple = _l === void 0 ? false : _l,\n    _m = _a.disableProgrammaticRipple,\n    disableProgrammaticRipple = _m === void 0 ? false : _m,\n    hoverMode = _a.hoverMode,\n    menuConfiguration = _a.menuConfiguration;\n  return _jsx(Dir, __assign({\n    defaultDir: defaultDir\n  }, {\n    children: _jsx(AppSizeListener, __assign({\n      defaultSize: defaultSize,\n      onChange: onAppResize,\n      phoneMaxWidth: phoneMaxWidth,\n      tabletMinWidth: tabletMinWidth,\n      tabletMaxWidth: tabletMaxWidth,\n      desktopMinWidth: desktopMinWidth,\n      desktopLargeMinWidth: desktopLargeMinWidth\n    }, {\n      children: _jsx(NestedDialogContextProvider, {\n        children: _jsx(UserInteractionModeListener, {\n          children: _jsx(StatesConfig, __assign({\n            disableRipple: disableRipple,\n            disableProgrammaticRipple: disableProgrammaticRipple,\n            rippleTimeout: rippleTimeout,\n            rippleClassNames: rippleClassNames\n          }, {\n            children: _jsx(HoverModeProvider, __assign({}, hoverMode, {\n              children: _jsx(IconProvider, __assign({}, icons, {\n                children: _jsx(FormThemeProvider, __assign({}, formTheme, {\n                  children: _jsx(MenuConfigurationProvider, __assign({}, menuConfiguration, {\n                    children: children\n                  }))\n                }))\n              }))\n            }))\n          }))\n        })\n      })\n    }))\n  }));\n}","map":{"version":3,"names":["NestedDialogContextProvider","FormThemeProvider","IconProvider","MenuConfigurationProvider","DEFAULT_RIPPLE_CLASSNAMES","DEFAULT_RIPPLE_TIMEOUT","StatesConfig","AppSizeListener","DEFAULT_APP_SIZE","DEFAULT_DESKTOP_LARGE_MIN_WIDTH","DEFAULT_DESKTOP_MIN_WIDTH","DEFAULT_DIR","DEFAULT_PHONE_MAX_WIDTH","DEFAULT_TABLET_MAX_WIDTH","DEFAULT_TABLET_MIN_WIDTH","Dir","HoverModeProvider","UserInteractionModeListener","Configuration","_a","onAppResize","children","icons","formTheme","_b","defaultDir","_c","phoneMaxWidth","_d","tabletMinWidth","_e","tabletMaxWidth","_f","desktopMinWidth","_g","desktopLargeMinWidth","_h","defaultSize","_j","rippleTimeout","_k","rippleClassNames","_l","disableRipple","_m","disableProgrammaticRipple","hoverMode","menuConfiguration","_jsx","__assign","onChange"],"sources":["E:\\WebDevelop\\React\\Project 07\\movies-app\\node_modules\\@react-md\\layout\\src\\Configuration.tsx"],"sourcesContent":["import type { ReactElement, ReactNode } from \"react\";\nimport { NestedDialogContextProvider } from \"@react-md/dialog\";\nimport type { FormThemeOptions } from \"@react-md/form\";\nimport { FormThemeProvider } from \"@react-md/form\";\nimport type { ConfigurableIcons } from \"@react-md/icon\";\nimport { IconProvider } from \"@react-md/icon\";\nimport type { MenuConfiguration } from \"@react-md/menu\";\nimport { MenuConfigurationProvider } from \"@react-md/menu\";\nimport type { StatesConfigProps } from \"@react-md/states\";\nimport {\n  DEFAULT_RIPPLE_CLASSNAMES,\n  DEFAULT_RIPPLE_TIMEOUT,\n  StatesConfig,\n} from \"@react-md/states\";\nimport type {\n  AppSizeListenerProps,\n  AppSizeOptions,\n  HoverModeConfiguration,\n  WritingDirection,\n} from \"@react-md/utils\";\nimport {\n  AppSizeListener,\n  DEFAULT_APP_SIZE,\n  DEFAULT_DESKTOP_LARGE_MIN_WIDTH,\n  DEFAULT_DESKTOP_MIN_WIDTH,\n  DEFAULT_DIR,\n  DEFAULT_PHONE_MAX_WIDTH,\n  DEFAULT_TABLET_MAX_WIDTH,\n  DEFAULT_TABLET_MIN_WIDTH,\n  Dir,\n  HoverModeProvider,\n  UserInteractionModeListener,\n} from \"@react-md/utils\";\n\nexport interface ConfigurationProps extends AppSizeOptions, StatesConfigProps {\n  /**\n   * An optional function to call when the app gets resized based on media\n   * queries. This is useful if you want to store the current app state in redux\n   * if you can't always access this state with the `useAppSize` hook.\n   */\n  onAppResize?: AppSizeListenerProps[\"onChange\"];\n\n  /**\n   * The children that should gain this configuration. This is required since\n   * there's really no reason to use this component if you don't have children\n   * that consume the React context.\n   */\n  children: ReactNode;\n\n  /**\n   * An object of all the configurable icons that you want to override\n   * throughout react-md.\n   */\n  icons?: ConfigurableIcons;\n\n  /**\n   * An object of any overrides for the `FormThemeProvider`.\n   */\n  formTheme?: FormThemeOptions;\n\n  /**\n   * The current writing direction for your app. This defaults to `\"ltr\"` but\n   * should be changed to `\"rtl\"` if using a language that is read from right to\n   * left.\n   *\n   * @remarks \\@since 2.3.0\n   */\n  defaultDir?: WritingDirection | (() => WritingDirection);\n\n  /**\n   * @see {@link HoverModeConfiguration}\n   * @remarks \\@since 2.8.0\n   */\n  hoverMode?: HoverModeConfiguration;\n\n  /**\n   * @see {@link MenuConfiguration}\n   * @remarks \\@since 5.0.0\n   */\n  menuConfiguration?: Readonly<MenuConfiguration>;\n}\n\n/**\n * This component allows you to quickly configure different functionality within\n * `react-md` in one place with reasonable defaults.\n */\nexport function Configuration({\n  onAppResize,\n  children,\n  icons,\n  formTheme,\n  defaultDir = DEFAULT_DIR,\n  phoneMaxWidth = DEFAULT_PHONE_MAX_WIDTH,\n  tabletMinWidth = DEFAULT_TABLET_MIN_WIDTH,\n  tabletMaxWidth = DEFAULT_TABLET_MAX_WIDTH,\n  desktopMinWidth = DEFAULT_DESKTOP_MIN_WIDTH,\n  desktopLargeMinWidth = DEFAULT_DESKTOP_LARGE_MIN_WIDTH,\n  defaultSize = DEFAULT_APP_SIZE,\n  rippleTimeout = DEFAULT_RIPPLE_TIMEOUT,\n  rippleClassNames = DEFAULT_RIPPLE_CLASSNAMES,\n  disableRipple = false,\n  disableProgrammaticRipple = false,\n  hoverMode,\n  menuConfiguration,\n}: ConfigurationProps): ReactElement {\n  return (\n    <Dir defaultDir={defaultDir}>\n      <AppSizeListener\n        defaultSize={defaultSize}\n        onChange={onAppResize}\n        phoneMaxWidth={phoneMaxWidth}\n        tabletMinWidth={tabletMinWidth}\n        tabletMaxWidth={tabletMaxWidth}\n        desktopMinWidth={desktopMinWidth}\n        desktopLargeMinWidth={desktopLargeMinWidth}\n      >\n        <NestedDialogContextProvider>\n          <UserInteractionModeListener>\n            <StatesConfig\n              disableRipple={disableRipple}\n              disableProgrammaticRipple={disableProgrammaticRipple}\n              rippleTimeout={rippleTimeout}\n              rippleClassNames={rippleClassNames}\n            >\n              <HoverModeProvider {...hoverMode}>\n                <IconProvider {...icons}>\n                  <FormThemeProvider {...formTheme}>\n                    <MenuConfigurationProvider {...menuConfiguration}>\n                      {children}\n                    </MenuConfigurationProvider>\n                  </FormThemeProvider>\n                </IconProvider>\n              </HoverModeProvider>\n            </StatesConfig>\n          </UserInteractionModeListener>\n        </NestedDialogContextProvider>\n      </AppSizeListener>\n    </Dir>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}