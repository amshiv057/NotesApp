{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nimport { useTableConfig } from \"./config\";\nvar block = bem(\"rmd-tr\");\n/**\n * Creates a `<tr>` element with some general styles that are inherited from the\n * base table configuration.\n */\nexport var TableRow = forwardRef(function TableRow(_a, ref) {\n  var className = _a.className,\n    propDisableHover = _a.disableHover,\n    propDisableBorders = _a.disableBorders,\n    children = _a.children,\n    _b = _a.selected,\n    selected = _b === void 0 ? false : _b,\n    _c = _a.clickable,\n    clickable = _c === void 0 ? false : _c,\n    props = __rest(_a, [\"className\", \"disableHover\", \"disableBorders\", \"children\", \"selected\", \"clickable\"]);\n  var _d = useTableConfig({\n      disableHover: propDisableHover,\n      disableBorders: propDisableBorders\n    }),\n    disableHover = _d.disableHover,\n    disableBorders = _d.disableBorders;\n  return _jsx(\"tr\", __assign({}, props, {\n    ref: ref,\n    className: cn(block({\n      bordered: !disableBorders,\n      hoverable: !disableHover,\n      clickable: clickable,\n      selected: selected,\n      \"selected-hoverable\": selected && !disableHover\n    }), className)\n  }, {\n    children: children\n  }));\n});","map":{"version":3,"names":["forwardRef","cn","bem","useTableConfig","block","TableRow","_a","ref","className","propDisableHover","disableHover","propDisableBorders","disableBorders","children","_b","selected","_c","clickable","props","__rest","_d","_jsx","__assign","bordered","hoverable"],"sources":["E:\\WebDevelop\\React\\Project 07\\movies-app\\node_modules\\@react-md\\table\\src\\TableRow.tsx"],"sourcesContent":["import type { HTMLAttributes } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\n\nimport type { TableRowConfiguration } from \"./config\";\nimport { useTableConfig } from \"./config\";\n\nexport interface TableRowProps\n  extends HTMLAttributes<HTMLTableRowElement>,\n    TableRowConfiguration {\n  /**\n   * Boolean if the current row has been selected and should apply the selected\n   * background-color.\n   */\n  selected?: boolean;\n\n  /**\n   * Boolean if the row should be clickable and update the cursor while hovered\n   * to be a pointer.\n   */\n  clickable?: boolean;\n}\n\nconst block = bem(\"rmd-tr\");\n\n/**\n * Creates a `<tr>` element with some general styles that are inherited from the\n * base table configuration.\n */\nexport const TableRow = forwardRef<HTMLTableRowElement, TableRowProps>(\n  function TableRow(\n    {\n      className,\n      disableHover: propDisableHover,\n      disableBorders: propDisableBorders,\n      children,\n      selected = false,\n      clickable = false,\n      ...props\n    },\n    ref\n  ) {\n    const { disableHover, disableBorders } = useTableConfig({\n      disableHover: propDisableHover,\n      disableBorders: propDisableBorders,\n    });\n\n    return (\n      <tr\n        {...props}\n        ref={ref}\n        className={cn(\n          block({\n            bordered: !disableBorders,\n            hoverable: !disableHover,\n            clickable,\n            selected,\n            \"selected-hoverable\": selected && !disableHover,\n          }),\n          className\n        )}\n      >\n        {children}\n      </tr>\n    );\n  }\n);\n"],"mappings":";;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,EAAE,MAAM,YAAY;AAC3B,SAASC,GAAG,QAAQ,iBAAiB;AAGrC,SAASC,cAAc,QAAQ,UAAU;AAkBzC,IAAMC,KAAK,GAAGF,GAAG,CAAC,QAAQ,CAAC;AAE3B;;;;AAIA,OAAO,IAAMG,QAAQ,GAAGL,UAAU,CAChC,SAASK,QAAQA,CACfC,EAQC,EACDC,GAAG;EARD,IAAAC,SAAS,GAAAF,EAAA,CAAAE,SAAA;IACKC,gBAAgB,GAAAH,EAAA,CAAAI,YAAA;IACdC,kBAAkB,GAAAL,EAAA,CAAAM,cAAA;IAClCC,QAAQ,GAAAP,EAAA,CAAAO,QAAA;IACRC,EAAA,GAAAR,EAAA,CAAAS,QAAgB;IAAhBA,QAAQ,GAAAD,EAAA,cAAG,KAAK,GAAAA,EAAA;IAChBE,EAAA,GAAAV,EAAA,CAAAW,SAAiB;IAAjBA,SAAS,GAAAD,EAAA,cAAG,KAAK,GAAAA,EAAA;IACdE,KAAK,GAAAC,MAAA,CAAAb,EAAA,EAPV,oFAQC,CADS;EAIJ,IAAAc,EAAA,GAAmCjB,cAAc,CAAC;MACtDO,YAAY,EAAED,gBAAgB;MAC9BG,cAAc,EAAED;KACjB,CAAC;IAHMD,YAAY,GAAAU,EAAA,CAAAV,YAAA;IAAEE,cAAc,GAAAQ,EAAA,CAAAR,cAGlC;EAEF,OACES,IAAA,OAAAC,QAAA,KACMJ,KAAK;IACTX,GAAG,EAAEA,GAAG;IACRC,SAAS,EAAEP,EAAE,CACXG,KAAK,CAAC;MACJmB,QAAQ,EAAE,CAACX,cAAc;MACzBY,SAAS,EAAE,CAACd,YAAY;MACxBO,SAAS,EAAAA,SAAA;MACTF,QAAQ,EAAAA,QAAA;MACR,oBAAoB,EAAEA,QAAQ,IAAI,CAACL;KACpC,CAAC,EACFF,SAAS;EACV;IAAAK,QAAA,EAEAA;EAAQ,GACN;AAET,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}