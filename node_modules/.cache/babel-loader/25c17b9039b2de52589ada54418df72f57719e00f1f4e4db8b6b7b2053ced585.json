{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { TextIconSpacing } from \"@react-md/icon\";\nimport { useInteractionStates } from \"@react-md/states\";\nimport { bem, useKeyboardFocusableElement } from \"@react-md/utils\";\nvar block = bem(\"rmd-tab\");\n/**\n * The `Tab` is a low-level component that just renders an accessible tab widget\n * along with some general styles and an optional icon.\n */\nexport var Tab = forwardRef(function Tab(_a, ref) {\n  var propClassName = _a.className,\n    contentStyle = _a.contentStyle,\n    contentClassName = _a.contentClassName,\n    _b = _a.disabled,\n    disabled = _b === void 0 ? false : _b,\n    icon = _a.icon,\n    _c = _a.stacked,\n    stacked = _c === void 0 ? false : _c,\n    _d = _a.iconAfter,\n    iconAfter = _d === void 0 ? false : _d,\n    children = _a.children,\n    active = _a.active,\n    panelId = _a.panelId,\n    disableRipple = _a.disableRipple,\n    disableProgrammaticRipple = _a.disableProgrammaticRipple,\n    rippleTimeout = _a.rippleTimeout,\n    rippleClassNames = _a.rippleClassNames,\n    rippleClassName = _a.rippleClassName,\n    rippleContainerClassName = _a.rippleContainerClassName,\n    enablePressedAndRipple = _a.enablePressedAndRipple,\n    props = __rest(_a, [\"className\", \"contentStyle\", \"contentClassName\", \"disabled\", \"icon\", \"stacked\", \"iconAfter\", \"children\", \"active\", \"panelId\", \"disableRipple\", \"disableProgrammaticRipple\", \"rippleTimeout\", \"rippleClassNames\", \"rippleClassName\", \"rippleContainerClassName\", \"enablePressedAndRipple\"]);\n  var _e = useInteractionStates({\n      handlers: props,\n      className: propClassName,\n      disabled: disabled,\n      disableRipple: disableRipple,\n      disableProgrammaticRipple: disableProgrammaticRipple,\n      rippleTimeout: rippleTimeout,\n      rippleClassNames: rippleClassNames,\n      rippleClassName: rippleClassName,\n      rippleContainerClassName: rippleContainerClassName,\n      enablePressedAndRipple: enablePressedAndRipple\n    }),\n    ripples = _e.ripples,\n    className = _e.className,\n    handlers = _e.handlers;\n  var refCallback = useKeyboardFocusableElement(ref);\n  return _jsxs(\"button\", __assign({}, props, handlers, {\n    ref: refCallback,\n    \"aria-selected\": active,\n    \"aria-controls\": panelId,\n    type: \"button\",\n    role: \"tab\",\n    disabled: disabled,\n    className: cn(block({\n      active: active,\n      stacked: icon && stacked\n    }), className),\n    tabIndex: active ? undefined : -1\n  }, {\n    children: [_jsx(TextIconSpacing, __assign({\n      icon: icon,\n      stacked: stacked,\n      iconAfter: iconAfter\n    }, {\n      children: _jsx(\"span\", __assign({\n        style: contentStyle,\n        className: cn(block(\"content\"), contentClassName)\n      }, {\n        children: children\n      }))\n    })), ripples]\n  }));\n});","map":{"version":3,"names":["forwardRef","cn","TextIconSpacing","useInteractionStates","bem","useKeyboardFocusableElement","block","Tab","_a","ref","propClassName","className","contentStyle","contentClassName","_b","disabled","icon","_c","stacked","_d","iconAfter","children","active","panelId","disableRipple","disableProgrammaticRipple","rippleTimeout","rippleClassNames","rippleClassName","rippleContainerClassName","enablePressedAndRipple","props","__rest","_e","handlers","ripples","refCallback","_jsxs","__assign","type","role","tabIndex","undefined","_jsx","style"],"sources":["E:\\WebDevelop\\React\\Project 07\\movies-app\\node_modules\\@react-md\\tabs\\src\\Tab.tsx"],"sourcesContent":["import type { HTMLAttributes } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { TextIconSpacing } from \"@react-md/icon\";\nimport type { InteractionStatesOptions } from \"@react-md/states\";\nimport { useInteractionStates } from \"@react-md/states\";\nimport { bem, useKeyboardFocusableElement } from \"@react-md/utils\";\n\nimport type { TabConfig } from \"./types\";\n\nexport interface TabProps\n  extends TabConfig,\n    HTMLAttributes<HTMLButtonElement>,\n    Omit<InteractionStatesOptions<HTMLButtonElement>, \"disableSpacebarClick\"> {\n  /**\n   * The id for the tab. This is required for a11y and linking the `TabPanel` to\n   * a specific tab.\n   */\n  id: string;\n\n  /**\n   * Boolean if the tab is currently active. Only one tab should be active at a\n   * time.\n   */\n  active: boolean;\n\n  /**\n   * The id for the `TabPanel` that the `Tab` controls. This is really just used\n   * to create an `aria-controls` attribute on the `Tab` itself, but Googling\n   * this results in some \"interesting\" results showing `aria-controls` doesn't\n   * really do much so this prop can be omitted.\n   *\n   * In addition, if you are using dynamically rendered tab panels, this value\n   * should only be provided when the tab becomes active as the `id` will not\n   * exist in the DOM until then and will be invalid.\n   */\n  panelId?: string;\n}\n\nconst block = bem(\"rmd-tab\");\n\n/**\n * The `Tab` is a low-level component that just renders an accessible tab widget\n * along with some general styles and an optional icon.\n */\nexport const Tab = forwardRef<HTMLButtonElement, TabProps>(function Tab(\n  {\n    className: propClassName,\n    contentStyle,\n    contentClassName,\n    disabled = false,\n    icon,\n    stacked = false,\n    iconAfter = false,\n    children,\n    active,\n    panelId,\n    disableRipple,\n    disableProgrammaticRipple,\n    rippleTimeout,\n    rippleClassNames,\n    rippleClassName,\n    rippleContainerClassName,\n    enablePressedAndRipple,\n    ...props\n  },\n  ref\n) {\n  const { ripples, className, handlers } = useInteractionStates({\n    handlers: props,\n    className: propClassName,\n    disabled,\n    disableRipple,\n    disableProgrammaticRipple,\n    rippleTimeout,\n    rippleClassNames,\n    rippleClassName,\n    rippleContainerClassName,\n    enablePressedAndRipple,\n  });\n  const refCallback = useKeyboardFocusableElement(ref);\n\n  return (\n    <button\n      {...props}\n      {...handlers}\n      ref={refCallback}\n      aria-selected={active}\n      aria-controls={panelId}\n      type=\"button\"\n      role=\"tab\"\n      disabled={disabled}\n      className={cn(block({ active, stacked: icon && stacked }), className)}\n      tabIndex={active ? undefined : -1}\n    >\n      <TextIconSpacing icon={icon} stacked={stacked} iconAfter={iconAfter}>\n        <span\n          style={contentStyle}\n          className={cn(block(\"content\"), contentClassName)}\n        >\n          {children}\n        </span>\n      </TextIconSpacing>\n      {ripples}\n    </button>\n  );\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}