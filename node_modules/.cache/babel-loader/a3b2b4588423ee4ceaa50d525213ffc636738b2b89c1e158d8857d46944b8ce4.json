{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport { DEFAULT_SLIDER_ANIMATION_TIME, DEFAULT_SLIDER_GET_VALUE_TEXT } from \"./constants\";\nimport { SliderContainer } from \"./SliderContainer\";\nimport { SliderThumb } from \"./SliderThumb\";\nimport { SliderTrack } from \"./SliderTrack\";\nimport { useSliderControls } from \"./useSliderControls\";\n/**\n * The `Slider` component allows the user to select a single value from a range\n * of numbers. The functionality for controlling the value of this component is\n * provided by the `useSlider` hook.\n *\n * @remarks \\@since 2.5.0\n */\nexport var Slider = forwardRef(function Slider(_a, ref) {\n  var baseId = _a.baseId,\n    propTrackProps = _a.trackProps,\n    label = _a.label,\n    labelProps = _a.labelProps,\n    thumbLabel = _a.thumbLabel,\n    thumbLabelledBy = _a.thumbLabelledBy,\n    thumbProps = _a.thumbProps,\n    min = _a.min,\n    max = _a.max,\n    step = _a.step,\n    _b = _a.discrete,\n    discrete = _b === void 0 ? false : _b,\n    _c = _a.disabled,\n    disabled = _c === void 0 ? false : _c,\n    _d = _a.vertical,\n    vertical = _d === void 0 ? false : _d,\n    onBlur = _a.onBlur,\n    onMouseDown = _a.onMouseDown,\n    onTouchStart = _a.onTouchStart,\n    _e = _a.getValueText,\n    getValueText = _e === void 0 ? DEFAULT_SLIDER_GET_VALUE_TEXT : _e,\n    _f = _a.animationDuration,\n    animationDuration = _f === void 0 ? DEFAULT_SLIDER_ANIMATION_TIME : _f,\n    value = _a.value,\n    minimum = _a.minimum,\n    maximum = _a.maximum,\n    increment = _a.increment,\n    incrementJump = _a.incrementJump,\n    decrement = _a.decrement,\n    decrementJump = _a.decrementJump,\n    persist = _a.persist,\n    setValue = _a.setValue,\n    props = __rest(_a, [\"baseId\", \"trackProps\", \"label\", \"labelProps\", \"thumbLabel\", \"thumbLabelledBy\", \"thumbProps\", \"min\", \"max\", \"step\", \"discrete\", \"disabled\", \"vertical\", \"onBlur\", \"onMouseDown\", \"onTouchStart\", \"getValueText\", \"animationDuration\", \"value\", \"minimum\", \"maximum\", \"increment\", \"incrementJump\", \"decrement\", \"decrementJump\", \"persist\", \"setValue\"]);\n  var _g = useSliderControls({\n      ref: propTrackProps === null || propTrackProps === void 0 ? void 0 : propTrackProps.ref,\n      thumb1Ref: thumbProps === null || thumbProps === void 0 ? void 0 : thumbProps.ref,\n      min: min,\n      max: max,\n      step: step,\n      value: value,\n      disabled: disabled,\n      vertical: vertical,\n      onBlur: onBlur,\n      onKeyDown: thumbProps === null || thumbProps === void 0 ? void 0 : thumbProps.onKeyDown,\n      onMouseDown: onMouseDown,\n      onTouchStart: onTouchStart,\n      animationDuration: animationDuration,\n      minimum: minimum,\n      maximum: maximum,\n      increment: increment,\n      incrementJump: incrementJump,\n      decrement: decrement,\n      decrementJump: decrementJump,\n      persist: persist,\n      setValue: setValue\n    }),\n    thumb1Ref = _g.thumb1Ref,\n    thumb1Value = _g.thumb1Value,\n    _thumb2Ref = _g.thumb2Ref,\n    _thumb2Value = _g.thumb2Value,\n    dragging = _g.dragging,\n    draggingIndex = _g.draggingIndex,\n    onKeyDown = _g.onKeyDown,\n    trackProps = __rest(_g, [\"thumb1Ref\", \"thumb1Value\", \"thumb2Ref\", \"thumb2Value\", \"dragging\", \"draggingIndex\", \"onKeyDown\"]);\n  var labelId = \"\";\n  if (label) {\n    labelId = (labelProps === null || labelProps === void 0 ? void 0 : labelProps.id) || \"\".concat(baseId, \"-label\");\n  }\n  return _jsx(SliderContainer, __assign({}, props, {\n    ref: ref,\n    label: label,\n    labelId: labelId,\n    labelProps: labelProps,\n    disabled: disabled,\n    vertical: vertical\n  }, {\n    children: _jsx(SliderTrack, __assign({\n      id: baseId\n    }, propTrackProps, trackProps, {\n      animate: !dragging,\n      disabled: disabled,\n      vertical: vertical\n    }, {\n      children: _jsx(SliderThumb, __assign({}, thumbProps, {\n        \"aria-label\": thumbLabel,\n        \"aria-labelledby\": thumbLabelledBy || labelId,\n        baseId: baseId,\n        ref: thumb1Ref,\n        getValueText: getValueText,\n        min: min,\n        max: max,\n        discrete: discrete,\n        disabled: disabled,\n        vertical: vertical,\n        animate: !dragging,\n        animationDuration: animationDuration,\n        value: thumb1Value,\n        index: 0,\n        active: draggingIndex === 0,\n        onKeyDown: onKeyDown\n      }))\n    }))\n  }));\n});","map":{"version":3,"names":["forwardRef","DEFAULT_SLIDER_ANIMATION_TIME","DEFAULT_SLIDER_GET_VALUE_TEXT","SliderContainer","SliderThumb","SliderTrack","useSliderControls","Slider","_a","ref","baseId","propTrackProps","trackProps","label","labelProps","thumbLabel","thumbLabelledBy","thumbProps","min","max","step","_b","discrete","_c","disabled","_d","vertical","onBlur","onMouseDown","onTouchStart","_e","getValueText","_f","animationDuration","value","minimum","maximum","increment","incrementJump","decrement","decrementJump","persist","setValue","props","__rest","_g","thumb1Ref","onKeyDown","thumb1Value","_thumb2Ref","thumb2Ref","_thumb2Value","thumb2Value","dragging","draggingIndex","labelId","id","concat","_jsx","__assign","children","animate","index","active"],"sources":["E:\\WebDevelop\\React\\Project 07\\movies-app\\node_modules\\@react-md\\form\\src\\slider\\Slider.tsx"],"sourcesContent":["import type { HTMLAttributes } from \"react\";\nimport { forwardRef } from \"react\";\nimport type { PropsWithRef } from \"@react-md/utils\";\n\nimport {\n  DEFAULT_SLIDER_ANIMATION_TIME,\n  DEFAULT_SLIDER_GET_VALUE_TEXT,\n} from \"./constants\";\nimport { SliderContainer } from \"./SliderContainer\";\nimport { SliderThumb } from \"./SliderThumb\";\nimport { SliderTrack } from \"./SliderTrack\";\nimport type { BaseSliderProps } from \"./types\";\nimport type { SliderRequiredProps } from \"./useSlider\";\nimport { useSliderControls } from \"./useSliderControls\";\n\n/**\n * @remarks \\@since 2.5.0\n */\nexport interface SliderProps extends SliderRequiredProps, BaseSliderProps {\n  /**\n   * An optional label to apply to the slider's thumb. This should normally be a\n   * short (1-4 word) description for this slider.\n   *\n   * @see {@link SliderLabelProps.label}\n   * @see {@link thumbLabelledBy}\n   */\n  thumbLabel?: string;\n\n  /**\n   * An optional id point to a label describing the slider's thumb. This should\n   * normally be a short (1-4 word) description for this slider.\n   *\n   * @see {@link SliderLabelProps.label}\n   * @see {@link thumbLabel}\n   */\n  thumbLabelledBy?: string;\n\n  /**\n   * Any additional props you'd like to pass to the track element as well as an\n   * optional `ref` if you need access to the track element for some reason.\n   */\n  trackProps?: PropsWithRef<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n  /**\n   * Any additional props you'd like to pass to the thumb element as well as an\n   * optional `ref` if you need access to the track element for some reason.\n   */\n  thumbProps?: PropsWithRef<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n}\n\n/**\n * The `Slider` component allows the user to select a single value from a range\n * of numbers. The functionality for controlling the value of this component is\n * provided by the `useSlider` hook.\n *\n * @remarks \\@since 2.5.0\n */\nexport const Slider = forwardRef<HTMLDivElement, SliderProps>(function Slider(\n  {\n    baseId,\n    trackProps: propTrackProps,\n    label,\n    labelProps,\n    thumbLabel,\n    thumbLabelledBy,\n    thumbProps,\n    min,\n    max,\n    step,\n    discrete = false,\n    disabled = false,\n    vertical = false,\n    onBlur,\n    onMouseDown,\n    onTouchStart,\n    getValueText = DEFAULT_SLIDER_GET_VALUE_TEXT,\n    animationDuration = DEFAULT_SLIDER_ANIMATION_TIME,\n    value,\n    minimum,\n    maximum,\n    increment,\n    incrementJump,\n    decrement,\n    decrementJump,\n    persist,\n    setValue,\n    ...props\n  },\n  ref\n) {\n  const {\n    thumb1Ref,\n    thumb1Value,\n    thumb2Ref: _thumb2Ref,\n    thumb2Value: _thumb2Value,\n    dragging,\n    draggingIndex,\n    onKeyDown,\n    ...trackProps\n  } = useSliderControls({\n    ref: propTrackProps?.ref,\n    thumb1Ref: thumbProps?.ref,\n    min,\n    max,\n    step,\n    value,\n    disabled,\n    vertical,\n    onBlur,\n    onKeyDown: thumbProps?.onKeyDown,\n    onMouseDown,\n    onTouchStart,\n    animationDuration,\n    minimum,\n    maximum,\n    increment,\n    incrementJump,\n    decrement,\n    decrementJump,\n    persist,\n    setValue,\n  });\n\n  let labelId = \"\";\n  if (label) {\n    labelId = labelProps?.id || `${baseId}-label`;\n  }\n\n  return (\n    <SliderContainer\n      {...props}\n      ref={ref}\n      label={label}\n      labelId={labelId}\n      labelProps={labelProps}\n      disabled={disabled}\n      vertical={vertical}\n    >\n      <SliderTrack\n        id={baseId}\n        {...propTrackProps}\n        {...trackProps}\n        animate={!dragging}\n        disabled={disabled}\n        vertical={vertical}\n      >\n        <SliderThumb\n          {...thumbProps}\n          aria-label={thumbLabel}\n          aria-labelledby={thumbLabelledBy || labelId}\n          baseId={baseId}\n          ref={thumb1Ref}\n          getValueText={getValueText}\n          min={min}\n          max={max}\n          discrete={discrete}\n          disabled={disabled}\n          vertical={vertical}\n          animate={!dragging}\n          animationDuration={animationDuration}\n          value={thumb1Value}\n          index={0}\n          active={draggingIndex === 0}\n          onKeyDown={onKeyDown}\n        />\n      </SliderTrack>\n    </SliderContainer>\n  );\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}