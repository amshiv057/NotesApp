{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport cn from \"classnames\";\nimport { Divider } from \"@react-md/divider\";\nimport { TreeItem } from \"@react-md/tree\";\nimport { SrOnly } from \"@react-md/typography\";\n/**\n * This is the default mini navigation item renderer provided by the layout\n * package that has some reasonable defaults for creating a navigation tree.\n *\n * This renderer behaves a bit differently than the\n * `defaultNavigationItemRenderer` since it will only render the tree item if:\n *\n * - the item is at the root -- `parentId === null`\n * - the item is a divider at the root\n * - the item is not a subheader -- there isn't enough space\n * - the item does not have any child items -- not enough space to show nesting\n * - the item has a `leftAddon` -- the mini variant only renders icons\n *\n * This rendered `TreeItem` will only display the `leftAddon` as the children\n * but will also render the tree item's label in the `SrOnly` component so an\n * accessible label still exists for the icon `TreeItem`.\n *\n * @see {@link TreeItemRenderer}\n * @see {@link defaultNavigationItemRenderer}\n */\nexport var defaultMiniNavigationItemRenderer = function (itemProps, item, _a) {\n  var _b, _c, _d, _e;\n  var linkComponent = _a.linkComponent,\n    getItemProps = _a.getItemProps,\n    getItemLabel = _a.getItemLabel,\n    labelKey = _a.labelKey;\n  var key = itemProps.key,\n    renderChildItems = itemProps.renderChildItems,\n    props = __rest(itemProps, [\"key\", \"renderChildItems\"]);\n  var divider = item.divider,\n    subheader = item.subheader,\n    leftAddon = item.leftAddon,\n    parentId = item.parentId,\n    style = item.style,\n    className = item.className,\n    liStyle = item.liStyle,\n    liClassName = item.liClassName,\n    as = item.as,\n    to = item.to,\n    href = item.href,\n    isLink = item.isLink,\n    propContentComponent = item.contentComponent;\n  if (divider && parentId === null) {\n    return _jsx(Divider, {}, key);\n  }\n  if (subheader || parentId !== null || !leftAddon || renderChildItems) {\n    return null;\n  }\n  var contentComponent = propContentComponent;\n  if (!contentComponent && isLink !== false && (to || href || isLink)) {\n    contentComponent = linkComponent;\n  }\n  var focused = itemProps.focused,\n    selected = itemProps.selected,\n    expanded = itemProps.expanded;\n  var overrides = getItemProps(__assign(__assign({}, item), {\n    focused: focused,\n    selected: selected,\n    expanded: expanded\n  }));\n  var children = overrides && overrides.children || undefined;\n  if (typeof children === \"undefined\") {\n    children = getItemLabel(item, labelKey);\n  }\n  return _jsxs(TreeItem, __assign({}, props, {\n    as: as,\n    to: to,\n    href: href,\n    isLink: isLink,\n    contentComponent: contentComponent,\n    style: (_b = overrides === null || overrides === void 0 ? void 0 : overrides.style) !== null && _b !== void 0 ? _b : style,\n    className: cn(\"rmd-layout-nav__mini-item\", (_c = overrides === null || overrides === void 0 ? void 0 : overrides.className) !== null && _c !== void 0 ? _c : className),\n    liStyle: (_d = overrides === null || overrides === void 0 ? void 0 : overrides.liStyle) !== null && _d !== void 0 ? _d : liStyle,\n    liClassName: (_e = overrides === null || overrides === void 0 ? void 0 : overrides.liClassName) !== null && _e !== void 0 ? _e : liClassName,\n    textChildren: false\n  }, {\n    children: [leftAddon, _jsx(SrOnly, {\n      children: children\n    })]\n  }), key);\n};","map":{"version":3,"names":["cn","Divider","TreeItem","SrOnly","defaultMiniNavigationItemRenderer","itemProps","item","_a","linkComponent","getItemProps","getItemLabel","labelKey","key","renderChildItems","props","__rest","divider","subheader","leftAddon","parentId","style","className","liStyle","liClassName","as","to","href","isLink","propContentComponent","contentComponent","_jsx","focused","selected","expanded","overrides","__assign","children","undefined","_jsxs","_b","_c","_d","_e","textChildren"],"sources":["E:\\WebDevelop\\React\\Project 07\\movies-app\\node_modules\\@react-md\\layout\\src\\defaultMiniNavigationItemRenderer.tsx"],"sourcesContent":["import type { ReactNode } from \"react\";\nimport cn from \"classnames\";\nimport { Divider } from \"@react-md/divider\";\nimport type { TreeItemRenderer } from \"@react-md/tree\";\nimport { TreeItem } from \"@react-md/tree\";\nimport { SrOnly } from \"@react-md/typography\";\n\nimport type { LayoutNavigationItem } from \"./types\";\n\n/**\n * This is the default mini navigation item renderer provided by the layout\n * package that has some reasonable defaults for creating a navigation tree.\n *\n * This renderer behaves a bit differently than the\n * `defaultNavigationItemRenderer` since it will only render the tree item if:\n *\n * - the item is at the root -- `parentId === null`\n * - the item is a divider at the root\n * - the item is not a subheader -- there isn't enough space\n * - the item does not have any child items -- not enough space to show nesting\n * - the item has a `leftAddon` -- the mini variant only renders icons\n *\n * This rendered `TreeItem` will only display the `leftAddon` as the children\n * but will also render the tree item's label in the `SrOnly` component so an\n * accessible label still exists for the icon `TreeItem`.\n *\n * @see {@link TreeItemRenderer}\n * @see {@link defaultNavigationItemRenderer}\n */\nexport const defaultMiniNavigationItemRenderer: TreeItemRenderer<\n  LayoutNavigationItem\n> = (\n  itemProps,\n  item,\n  { linkComponent, getItemProps, getItemLabel, labelKey }\n) => {\n  const { key, renderChildItems, ...props } = itemProps;\n  const {\n    divider,\n    subheader,\n    leftAddon,\n    parentId,\n    style,\n    className,\n    liStyle,\n    liClassName,\n    as,\n    to,\n    href,\n    isLink,\n    contentComponent: propContentComponent,\n  } = item;\n\n  if (divider && parentId === null) {\n    return <Divider key={key} />;\n  }\n\n  if (subheader || parentId !== null || !leftAddon || renderChildItems) {\n    return null;\n  }\n\n  let contentComponent = propContentComponent;\n  if (!contentComponent && isLink !== false && (to || href || isLink)) {\n    contentComponent = linkComponent;\n  }\n\n  const { focused, selected, expanded } = itemProps;\n  const overrides = getItemProps({\n    ...item,\n    focused,\n    selected,\n    expanded,\n  });\n  let children: ReactNode = (overrides && overrides.children) || undefined;\n  if (typeof children === \"undefined\") {\n    children = getItemLabel(item, labelKey);\n  }\n\n  return (\n    <TreeItem\n      key={key}\n      {...props}\n      as={as}\n      to={to}\n      href={href}\n      isLink={isLink}\n      contentComponent={contentComponent}\n      style={overrides?.style ?? style}\n      className={cn(\n        \"rmd-layout-nav__mini-item\",\n        overrides?.className ?? className\n      )}\n      liStyle={overrides?.liStyle ?? liStyle}\n      liClassName={overrides?.liClassName ?? liClassName}\n      textChildren={false}\n    >\n      {leftAddon}\n      <SrOnly>{children}</SrOnly>\n    </TreeItem>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}