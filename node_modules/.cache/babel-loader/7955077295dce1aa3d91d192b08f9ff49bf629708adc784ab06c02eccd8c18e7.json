{"ast":null,"code":"var _jsxFileName = \"E:\\\\WebDevelop\\\\React\\\\Project 07\\\\movies-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Sidebar from \"./Components/Sider\";\nimport Editor from \"./Components/Editor\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\nimport \"./index.css\";\nimport React from \"react\";\nimport { addDoc, onSnapshot, doc } from \"firebase/firestore\";\nimport { notesCollection } from \"./Firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  var _notes$;\n  const [notes, setNotes] = React.useState(() => JSON.parse(localStorage.getItem(\"notes\")) || []);\n  const [currentNoteId, setCurrentNoteId] = React.useState(((_notes$ = notes[0]) === null || _notes$ === void 0 ? void 0 : _notes$.id) || \"\");\n  const currentNote = notes.find(note => {\n    return note.id === currentNoteId;\n  }) || notes[0];\n  React.useEffect(() => {\n    const unsubscribe = onSnapshot(notesCollection, function (snapshot) {\n      const notesArr = snapshot.docs.map(doc => ({\n        ...doc.data(),\n        id: doc.id\n      }));\n      setNotes(notesArr);\n    });\n    return unsubscribe;\n  }, []);\n  async function createNewNote() {\n    const newNote = {\n      body: \"# Type your markdown notes title here\"\n    };\n    const newNoteRef = await addDoc(notesCollection, newNote);\n    setCurrentNoteId(newNoteRef.id);\n  }\n  function updateNote(text) {\n    setNotes(oldNotes => {\n      const newArray = [];\n      for (let i = 0; i < oldNotes.length; i++) {\n        const oldNote = oldNotes[i];\n        if (oldNote.id === currentNoteId) {\n          newArray.unshift({\n            ...oldNote,\n            body: text\n          });\n        } else {\n          newArray.push(oldNote);\n        }\n      }\n      return newArray;\n    });\n  }\n  function deleteNote(event, noteId) {\n    event.stopPropagation();\n    setNotes(oldNotes => oldNotes.filter(note => note.id != noteId));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [30, 70],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: notes,\n        currentNote: currentNote,\n        setCurrentNoteId: setCurrentNoteId,\n        newNote: createNewNote,\n        deleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), currentNoteId && notes.length > 0 && /*#__PURE__*/_jsxDEV(Editor, {\n        currentNote: currentNote,\n        updateNote: updateNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        onClick: createNewNote,\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6GkOKkeyKkMmYRRBL+RdhsIg19M=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Sidebar","Editor","Split","nanoid","React","addDoc","onSnapshot","doc","notesCollection","jsxDEV","_jsxDEV","App","_s","_notes$","notes","setNotes","useState","JSON","parse","localStorage","getItem","currentNoteId","setCurrentNoteId","id","currentNote","find","note","useEffect","unsubscribe","snapshot","notesArr","docs","map","data","createNewNote","newNote","body","newNoteRef","updateNote","text","oldNotes","newArray","i","length","oldNote","unshift","push","deleteNote","event","noteId","stopPropagation","filter","children","sizes","direction","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/WebDevelop/React/Project 07/movies-app/src/App.js"],"sourcesContent":["import Sidebar from \"./Components/Sider\";\nimport Editor from \"./Components/Editor\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\nimport \"./index.css\";\nimport React from \"react\";\nimport { addDoc, onSnapshot, doc } from \"firebase/firestore\";\nimport { notesCollection } from \"./Firebase\";\n\nexport default function App() {\n  const [notes, setNotes] = React.useState(\n    () => JSON.parse(localStorage.getItem(\"notes\")) || []\n  );\n  const [currentNoteId, setCurrentNoteId] = React.useState(notes[0]?.id || \"\");\n\n  const currentNote =\n    notes.find((note) => {\n      return note.id === currentNoteId;\n    }) || notes[0];\n\n  React.useEffect(() => {\n    const unsubscribe = onSnapshot(notesCollection, function (snapshot) {\n      const notesArr = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      setNotes(notesArr);\n    });\n    return unsubscribe;\n  }, []);\n  async function createNewNote() {\n    const newNote = {\n      body: \"# Type your markdown notes title here\",\n    };\n\n    const newNoteRef = await addDoc(notesCollection, newNote);\n    setCurrentNoteId(newNoteRef.id);\n  }\n  function updateNote(text) {\n    setNotes((oldNotes) => {\n      const newArray = [];\n      for (let i = 0; i < oldNotes.length; i++) {\n        const oldNote = oldNotes[i];\n        if (oldNote.id === currentNoteId) {\n          newArray.unshift({ ...oldNote, body: text });\n        } else {\n          newArray.push(oldNote);\n        }\n      }\n      return newArray;\n    });\n  }\n\n  function deleteNote(event, noteId) {\n    event.stopPropagation();\n    setNotes((oldNotes) => oldNotes.filter((note) => note.id != noteId));\n  }\n  return (\n    <main>\n      {notes.length > 0 ? (\n        <Split sizes={[30, 70]} direction=\"horizontal\" className=\"split\">\n          <Sidebar\n            notes={notes}\n            currentNote={currentNote}\n            setCurrentNoteId={setCurrentNoteId}\n            newNote={createNewNote}\n            deleteNote={deleteNote}\n          />\n          {currentNoteId && notes.length > 0 && (\n            <Editor currentNote={currentNote} updateNote={updateNote} />\n          )}\n        </Split>\n      ) : (\n        <div className=\"no-notes\">\n          <h1>You have no notes</h1>\n          <button className=\"first-note\" onClick={createNewNote}>\n            Create one now\n          </button>\n        </div>\n      )}\n    </main>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}