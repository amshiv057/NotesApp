{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport { useIcon } from \"@react-md/icon\";\nimport { InputToggle } from \"./InputToggle\";\n/**\n * The `Radio` component is just a wrapper for the `InputToggle` that\n * defaults to reasonable defaults for a radio input.\n */\nexport var Radio = forwardRef(function Radio(_a, ref) {\n  var propIcon = _a.icon,\n    props = __rest(_a, [\"icon\"]);\n  var icon = useIcon(\"radio\", propIcon);\n  return _jsx(InputToggle, __assign({}, props, {\n    icon: icon,\n    ref: ref,\n    type: \"radio\"\n  }));\n});","map":{"version":3,"names":["forwardRef","useIcon","InputToggle","Radio","_a","ref","propIcon","icon","props","__rest","_jsx","__assign","type"],"sources":["E:\\WebDevelop\\React\\Project 07\\movies-app\\node_modules\\@react-md\\form\\src\\toggle\\Radio.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport { useIcon } from \"@react-md/icon\";\n\nimport type { InputToggleProps } from \"./InputToggle\";\nimport { InputToggle } from \"./InputToggle\";\n\nexport interface RadioProps extends InputToggleProps {\n  /**\n   * A value is required for a radio button unlike a checkbox.\n   */\n  value: readonly string[] | string | number;\n}\n\n/**\n * The `Radio` component is just a wrapper for the `InputToggle` that\n * defaults to reasonable defaults for a radio input.\n */\nexport const Radio = forwardRef<HTMLInputElement, RadioProps>(function Radio(\n  { icon: propIcon, ...props },\n  ref\n) {\n  const icon = useIcon(\"radio\", propIcon);\n\n  return <InputToggle {...props} icon={icon} ref={ref} type=\"radio\" />;\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,OAAO,QAAQ,gBAAgB;AAGxC,SAASC,WAAW,QAAQ,eAAe;AAS3C;;;;AAIA,OAAO,IAAMC,KAAK,GAAGH,UAAU,CAA+B,SAASG,KAAKA,CAC1EC,EAA4B,EAC5BC,GAAG;EADD,IAAMC,QAAQ,GAAAF,EAAA,CAAAG,IAAA;IAAKC,KAAK,GAAAC,MAAA,CAAAL,EAAA,EAA1B,QAA4B,CAAF;EAG1B,IAAMG,IAAI,GAAGN,OAAO,CAAC,OAAO,EAAEK,QAAQ,CAAC;EAEvC,OAAOI,IAAA,CAACR,WAAW,EAAAS,QAAA,KAAKH,KAAK;IAAED,IAAI,EAAEA,IAAI;IAAEF,GAAG,EAAEA,GAAG;IAAEO,IAAI,EAAC;EAAO,GAAG;AACtE,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}