{"ast":null,"code":"var _jsxFileName = \"E:\\\\WebDevelop\\\\React\\\\Project 07\\\\movies-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Sidebar from \"./Components/Sider\";\nimport Editor from \"./Components/Editor\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\nimport \"./index.css\";\nimport React from \"react\";\nimport { addDoc, onSnapshot, doc, deleteDoc, setDoc } from \"firebase/firestore\";\nimport { notesCollection, db } from \"./Firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [notes, setNotes] = React.useState([]);\n  const [currentNoteId, setCurrentNoteId] = React.useState(\"\");\n  const [tempNoteText, settempNoteText] = React.useState(\"\");\n  console.log(currentNoteId);\n  const currentNote = notes.find(note => note.id === currentNoteId) || notes[0];\n  const sortArr = notes.sort((a, b) => b.updateAt - a.updateAt);\n  React.useEffect(() => {\n    const unsubscribe = onSnapshot(notesCollection, function (snapshot) {\n      const notesArr = snapshot.docs.map(doc => ({\n        ...doc.data(),\n        id: doc.id\n      }));\n      setNotes(notesArr);\n    });\n    return unsubscribe;\n  }, []);\n  React.useEffect(() => {\n    if (currentNote) {\n      settempNoteText(currentNote.body);\n    }\n  }, [currentNote]);\n  React.useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (tempNoteText !== currentNote.body) {\n        updateNote(tempNoteText);\n      }\n    }, 500);\n    return () => clearTimeout(timeoutId);\n  }, [tempNoteText]);\n  React.useEffect(() => {\n    if (!currentNoteId) {\n      var _notes$;\n      setCurrentNoteId((_notes$ = notes[0]) === null || _notes$ === void 0 ? void 0 : _notes$.id);\n    }\n  }, [notes]);\n  async function createNewNote() {\n    const newNote = {\n      body: \"# Type your markdown notes title here\",\n      createdAt: Date.now(),\n      updateAt: Date.now()\n    };\n    const newNoteRef = await addDoc(notesCollection, newNote);\n    setCurrentNoteId(newNoteRef.id);\n  }\n  async function updateNote(text) {\n    const docref = doc(db, \"notes\", currentNoteId);\n    await setDoc(docref, {\n      body: text,\n      updateAt: Date.now()\n    }, {\n      merge: true\n    });\n  }\n  async function deleteNote(noteId) {\n    const docref = doc(db, \"notes\", noteId);\n    await deleteDoc(docref);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [30, 70],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: sortArr,\n        currentNote: currentNote,\n        setCurrentNoteId: setCurrentNoteId,\n        newNote: createNewNote,\n        deleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Editor, {\n        tempNoteText: tempNoteText,\n        settempNoteText: settempNoteText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        onClick: createNewNote,\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8yogtni3oCA8B7ecQVpccpYTwBw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Sidebar","Editor","Split","nanoid","React","addDoc","onSnapshot","doc","deleteDoc","setDoc","notesCollection","db","jsxDEV","_jsxDEV","App","_s","notes","setNotes","useState","currentNoteId","setCurrentNoteId","tempNoteText","settempNoteText","console","log","currentNote","find","note","id","sortArr","sort","a","b","updateAt","useEffect","unsubscribe","snapshot","notesArr","docs","map","data","body","timeoutId","setTimeout","updateNote","clearTimeout","_notes$","createNewNote","newNote","createdAt","Date","now","newNoteRef","text","docref","merge","deleteNote","noteId","children","length","sizes","direction","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/WebDevelop/React/Project 07/movies-app/src/App.js"],"sourcesContent":["import Sidebar from \"./Components/Sider\";\nimport Editor from \"./Components/Editor\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\nimport \"./index.css\";\nimport React from \"react\";\nimport { addDoc, onSnapshot, doc, deleteDoc, setDoc } from \"firebase/firestore\";\nimport { notesCollection, db } from \"./Firebase\";\n\nexport default function App() {\n  const [notes, setNotes] = React.useState([]);\n  const [currentNoteId, setCurrentNoteId] = React.useState(\"\");\n\n  const [tempNoteText, settempNoteText] = React.useState(\"\");\n  console.log(currentNoteId);\n  const currentNote =\n    notes.find((note) => note.id === currentNoteId) || notes[0];\n\n  const sortArr = notes.sort((a, b) => b.updateAt - a.updateAt);\n\n  React.useEffect(() => {\n    const unsubscribe = onSnapshot(notesCollection, function (snapshot) {\n      const notesArr = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      setNotes(notesArr);\n    });\n    return unsubscribe;\n  }, []);\n\n  React.useEffect(() => {\n    if (currentNote) {\n      settempNoteText(currentNote.body);\n    }\n  }, [currentNote]);\n\n  React.useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (tempNoteText !== currentNote.body) {\n        updateNote(tempNoteText);\n      }\n    }, 500);\n    return () => clearTimeout(timeoutId);\n  }, [tempNoteText]);\n  React.useEffect(() => {\n    if (!currentNoteId) {\n      setCurrentNoteId(notes[0]?.id);\n    }\n  }, [notes]);\n  async function createNewNote() {\n    const newNote = {\n      body: \"# Type your markdown notes title here\",\n      createdAt: Date.now(),\n      updateAt: Date.now(),\n    };\n\n    const newNoteRef = await addDoc(notesCollection, newNote);\n    setCurrentNoteId(newNoteRef.id);\n  }\n  async function updateNote(text) {\n    const docref = doc(db, \"notes\", currentNoteId);\n    await setDoc(docref, { body: text, updateAt: Date.now() }, { merge: true });\n  }\n\n  async function deleteNote(noteId) {\n    const docref = doc(db, \"notes\", noteId);\n    await deleteDoc(docref);\n  }\n  return (\n    <main>\n      {notes.length > 0 ? (\n        <Split sizes={[30, 70]} direction=\"horizontal\" className=\"split\">\n          <Sidebar\n            notes={sortArr}\n            currentNote={currentNote}\n            setCurrentNoteId={setCurrentNoteId}\n            newNote={createNewNote}\n            deleteNote={deleteNote}\n          />\n          {\n            <Editor\n              tempNoteText={tempNoteText}\n              settempNoteText={settempNoteText}\n            />\n          }\n        </Split>\n      ) : (\n        <div className=\"no-notes\">\n          <h1>You have no notes</h1>\n          <button className=\"first-note\" onClick={createNewNote}>\n            Create one now\n          </button>\n        </div>\n      )}\n    </main>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}