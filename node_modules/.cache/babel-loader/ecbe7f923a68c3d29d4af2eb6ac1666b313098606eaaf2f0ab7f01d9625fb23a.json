{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["E:\\WebDevelop\\React\\Project 07\\movies-app\\node_modules\\@react-md\\utils\\src\\keyboardMovement\\types.ts"],"sourcesContent":["import type { NonNullRef } from \"../types\";\n\n/**\n * @remarks \\@since 5.0.0\n */\nexport interface KeyboardMovementConfiguration {\n  /**\n   * A list of keys that will attempt to increment the focus index by 1.\n   *\n   * @defaultValue `[\"ArrowDown\"]`\n   */\n  incrementKeys?: readonly string[];\n\n  /**\n   * A list of keys that will attempt to decrement the focus index by 1.\n   *\n   * @defaultValue `[\"ArrowUp\"]`\n   */\n  decrementKeys?: readonly string[];\n\n  /**\n   * A list of keys that will set the focus index to `0`.\n   *\n   * @defaultValue `[\"Home\"]`\n   */\n  jumpToFirstKeys?: readonly string[];\n\n  /**\n   * A list of keys that will set the focus index to the last focusable index.\n   *\n   * @defaultValue `[\"End\"]`\n   */\n  jumpToLastKeys?: readonly string[];\n}\n\n/**\n * The defined {@link KeyboardMovementConfiguration} that should be used for\n * custom keyboard focus behavior.\n *\n * @remarks \\@since 5.0.0\n */\nexport type KeyboardMovementConfig = Required<KeyboardMovementConfiguration>;\n\n/**\n * @remarks \\@since 5.0.0\n */\nexport interface KeyboardMovementBehavior {\n  /**\n   * Boolean if pressing a letter will focus the next item in the\n   * {@link KeyboardMovementProvider} that starts with the same letter.\n   *\n   * @defaultValue `false`\n   */\n  searchable?: boolean;\n\n  /**\n   * Boolean if the {@link KeyboardMovementProvider} should allow the focus behavior\n   * to loop from the first to last or last to first item instead of preventing\n   * any new focus behavior. In other words... if the last item is focused and\n   * the user presses a key that should advance the focus to the next focusable\n   * element, should the focus stay on the current element or loop back and\n   * focus the first focusable item.\n   *\n   * @defaultValue `false`\n   */\n  loopable?: boolean;\n\n  /**\n   * Boolean if elements that are `aria-disabled` or `disabled` should still be\n   * able to gain focus.\n   *\n   * @defaultValue `false`\n   */\n  includeDisabled?: boolean;\n\n  /**\n   * Boolean if the keyboard movement is horizontal instead of vertical. This\n   * updates the default keyboard config to use `ArrowRight` and `ArrowLeft`\n   * instead of `ArrowDown` and `ArrowUp`,\n   *\n   * @remarks \\@since 5.1.2\n   * @defaultValue `false`\n   */\n  horizontal?: boolean;\n}\n\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport interface KeyboardFocusElementData {\n  /**\n   * The element that can be keyboard focused.\n   */\n  element: HTMLElement;\n\n  /**\n   * The text content of the element that is used for searching. This will be\n   * the empty string if the {@link KeyboardMovementBehavior.searchable} is\n   * false\n   */\n  content: string;\n}\n\n/**\n * This is a ref containing all the {@link KeyboardFocusElementData} that are\n * being watched by the {@link KeyboardMovementProvider}. This is generally used\n * to focus specific elements by index, attempt to find an element by search\n * text, or any additional custom focus behavior.\n *\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport type KeyboardFocusElementLookup = NonNullRef<KeyboardFocusElementData[]>;\n\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport interface KeyboardFocusContext\n  extends Required<KeyboardMovementBehavior> {\n  /** {@inheritDoc KeyboardMovementConfig} */\n  config: NonNullRef<KeyboardMovementConfig>;\n\n  /**\n   * A function that is used to add an element to the list of focusable\n   * elements.\n   */\n  attach<E extends HTMLElement>(element: E): void;\n\n  /**\n   * A function that is used to remove an element to the list of focusable\n   * elements.\n   */\n  detach<E extends HTMLElement>(element: E): void;\n\n  /** {@inheritDoc KeyboardFocusElementLookup} */\n  watching: KeyboardFocusElementLookup;\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}